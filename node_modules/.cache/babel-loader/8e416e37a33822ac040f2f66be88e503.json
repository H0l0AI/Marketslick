{"ast":null,"code":"import axios from 'axios';\nimport firebase from \"firebase/compat\";\nimport cookie from \"js-cookie\";\nimport { rootStore } from './Store';\n\nconst {\n  v4: uuidv4\n} = require('uuid');\n\nexport async function getTemplatesWithId(id) {\n  console.log('with id', id);\n  return firebase.firestore().collection(\"templates\").get().then(data => {\n    console.log('data', data, 'id', rootStore.pageStore.userId);\n\n    if (data) {\n      const dataToLoad = data.docs.find(doc => {\n        return doc.data().author === rootStore.pageStore.userId;\n      });\n\n      if (dataToLoad) {\n        console.log(dataToLoad.data(), 'LOAD with ID', id);\n        rootStore.pageStore.setActiveTemplate(dataToLoad.data());\n        return dataToLoad.data();\n      }\n    }\n  }).catch(e => {\n    console.log('e', e);\n  });\n}\nexport function initializeAuthentication() {\n  initializeFirebase().then(res => {\n    console.log('FB, initialized.');\n    return firebase.auth().onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        console.log('on auth state:', userAuth, '...UID', userAuth.uid); // todo abstract loading screen from auth initialization\n\n        rootStore.pageStore.setUser(userAuth);\n\n        if (cookie.get('signInType') === 'google') {\n          return firebase.firestore().collection(\"users\").doc(`${userAuth.uid}`).set({\n            email: userAuth.email\n          }).then(r => {\n            cookie.remove('signInType');\n            console.log(\"Google Document successfully written!\", r);\n          }).catch(e => {\n            cookie.remove('userHasLoggedIn');\n          });\n        }\n      }\n    });\n  });\n}\nexport function initializeFirebase() {\n  return new Promise(resolve => {\n    if (firebase.auth().currentUser) {\n      resolve(true);\n    } else {\n      const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n        unsubscribe();\n\n        if (user) {\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n      });\n    }\n  }).catch(e => {\n    console.log('init error', e); // throw new error\n  });\n}\nexport async function signUpUsingEmail(fields) {\n  return firebase.auth().createUserWithEmailAndPassword(fields.email, fields.password).catch(error => {\n    console.log('...', error);\n  }).then(authResult => {\n    // @ts-ignore\n    firebase.firestore().collection(\"users\").doc(`${uuidv4()}`).set({\n      email: fields.email\n    }).then(r => {\n      console.log(\"Document successfully written!\", r);\n    }).catch(e => {\n      cookie.remove('userHasLoggedIn');\n    });\n  });\n}\nexport async function signUpUsingSocial(type) {\n  cookie.set('signInType', 'google');\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({\n    prompt: 'select_account'\n  });\n  return firebase.auth().signInWithRedirect(provider);\n}\nexport async function signUpUsingFacebook(type) {\n  const provider = new firebase.auth.FacebookAuthProvider();\n  provider.setCustomParameters({\n    auth_type: 'https'\n  });\n  return firebase.auth().signInWithRedirect(provider);\n}\nexport async function handleSignOut(noReload) {\n  firebase.auth().signOut().then(() => {\n    cookie.remove('userHasLoggedIn');\n\n    if (noReload) {\n      return true;\n    }\n\n    setTimeout(() => {\n      window.location.reload();\n    }, 1000);\n  });\n}\nexport function createWebsite(code, content) {\n  let url = `https://api.github.com/repos/H0l0AI/Marketslick/contents/src/contents.json`;\n  console.log('gonna BTOA it', unescape(encodeURIComponent(JSON.stringify(content))));\n  const body = btoa(unescape(encodeURIComponent(JSON.stringify(content))));\n  const createBranchURL = 'https://api.github.com/repos/H0l0AI/Marketslick/git/refs';\n  const headers = {\n    'Authorization': 'token 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',\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Accept': 'application/vnd.github.v3+json'\n  };\n  const getBranchHeadsURL = 'https://api.github.com/repos/H0l0AI/Marketslick/git/refs/heads';\n  return axios({\n    method: 'get',\n    url: getBranchHeadsURL,\n    headers: headers\n  }).then(res => {\n    {\n      console.log('GITHUB= res,', res.data, res.data[res.data.length - 1]);\n      const headSha = res.data.find(ref => ref.ref === \"refs/heads/main\").object.sha;\n      const branchExists = res.data.find(reference => reference.ref.slice(11) === code);\n\n      if (branchExists) {\n        console.log('THIS BRANCH EXISTS', branchExists, code);\n        url = url + `?ref=${code}`;\n        return axios({\n          method: 'get',\n          url: url,\n          headers: headers\n        }).then(res => {\n          console.log('GITHUB RES GET:', res, code);\n          const sha = res.data.sha;\n          return axios({\n            method: 'delete',\n            data: {\n              message: \"Automation delete\",\n              content: body,\n              sha: sha,\n              branch: `${code}`\n            },\n            url: url,\n            headers: headers\n          }).then(commitResponse => {\n            console.log('LETS FUCKING GO DELETED', commitResponse);\n            return axios({\n              method: 'put',\n              data: {\n                message: \"Automation sync\",\n                content: body,\n                sha: sha,\n                branch: `${code}`\n              },\n              url: url,\n              headers: headers\n            }).then(res => {\n              console.log('ADDED THE NEW SHIT', res);\n            }).catch(e => {\n              console.log('put not work', e);\n            });\n          }).catch(e => {\n            console.log('axios GET ERROR 4', e);\n          }).catch(e => {\n            console.log('axs get error 3', e);\n          });\n        });\n      }\n\n      console.log('HEADSHA', headSha);\n      const createBranchBody = {\n        \"ref\": `refs/heads/${code}`,\n        \"sha\": headSha\n      };\n      return axios({\n        method: 'post',\n        data: createBranchBody,\n        url: createBranchURL,\n        headers: headers\n      }).then(createBranchRes => {\n        console.log('putRes DID HE FIRE IT OFF?', createBranchRes, 'DO I NEED CREATESHA EARLIER');\n        return axios({\n          method: 'get',\n          url: url,\n          headers: headers\n        }).then(res => {\n          console.log('GITHUB RES GET:', res);\n          const sha = res.data.sha;\n          return axios({\n            method: 'put',\n            data: {\n              message: \"Automation sync\",\n              content: body,\n              sha: sha,\n              branch: `${code}`\n            },\n            url: url,\n            headers: headers\n          }).then(commitResponse => {\n            console.log('LETS FUCKING GO', commitResponse);\n          }).catch(e => {\n            console.log('axios GET ERROR 4', e);\n          }).catch(e => {\n            console.log('axs get error 3', e);\n          });\n        }).catch(e => {\n          console.log('axios GET ERROR 2', e);\n        }).catch(e => {\n          console.log('axs get error 1', e);\n        });\n      }).catch(e => {\n        console.log('couldnt create', e);\n      });\n    }\n  });\n}\n;\nexport async function getRelevantBusinessInfo(placeInformation, key) {\n  const PROXY_URL = 'https://cryptic-badlands-53121.herokuapp.com/';\n\n  try {\n    const locationData = {\n      location: {\n        latitude: '',\n        longitude: ''\n      },\n      timeZoneId: '',\n      address: '',\n      name: '',\n      area: 'Auckland',\n      countryCode: 'NZ',\n      phoneNumber: '',\n      types: [],\n      utcOffset: '',\n      website: '',\n      rawOffset: '',\n      dstOffset: '',\n      businessClass: 'management',\n      // creator role for practice\n      creatorRole: 'practice_admin'\n    }; // todo get geolocation ...address external\n\n    const url = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${encodeURIComponent(placeInformation.place_id)}&key=${encodeURIComponent(key)}`;\n    const res = await axios({\n      method: 'get',\n      url: PROXY_URL + url,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    });\n    const countryCode = res.data.result.address_components.find(component => component.types.includes('country'));\n    let area;\n\n    if (countryCode.short_name === 'NZ' || countryCode.short_name !== 'AU') {\n      area = res.data.result.address_components.find(component => component.types.includes('administrative_area_level_1'));\n    } else {\n      area = res.data.result.address_components.find(component => component.types.includes('administrative_area_level_2'));\n\n      if (!area) {\n        area = res.data.result.address_components.find(component => component.types.includes('administrative_area_level_1'));\n      }\n    }\n\n    locationData.name = res.data.result.name;\n    locationData.location.latitude = res.data.result.geometry.location.lat;\n    locationData.location.longitude = res.data.result.geometry.location.lng;\n    locationData.address = res.data.result.formatted_address;\n    locationData.phoneNumber = res.data.result.formatted_phone_number;\n    locationData.types = res.data.result.types;\n    locationData.utcOffset = res.data.result.utc_offset;\n    locationData.website = res.data.result.website;\n\n    if (countryCode.short_name && area && area.short_name) {\n      locationData.countryCode = countryCode.short_name;\n      locationData.area = area.long_name;\n    } else {\n      return;\n    }\n\n    firebase.firestore().collection(\"users\").doc(`${rootStore.pageStore.userId}`).set({\n      businessInfo: locationData\n    }).then(r => {}).catch(e => {});\n    return locationData; //create business in firebase here\n  } catch (e) {\n    console.log('GMB error');\n  }\n}\nexport async function autoCompletePlacesAction(data, key) {\n  const PROXY_URL = 'https://cryptic-badlands-53121.herokuapp.com/';\n  console.log('?', PROXY_URL);\n  const url = `https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(data)}&key=${encodeURIComponent(key)}`;\n  const res = await axios({\n    method: 'get',\n    url: PROXY_URL + url,\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    }\n  });\n  return rootStore.pageStore.setAutoCompletePlaces(res.data);\n}","map":{"version":3,"sources":["/Users/aider/WebstormProjects/Marketslick/Marketslick/src/stores/PageService.js"],"names":["axios","firebase","cookie","rootStore","v4","uuidv4","require","getTemplatesWithId","id","console","log","firestore","collection","get","then","data","pageStore","userId","dataToLoad","docs","find","doc","author","setActiveTemplate","catch","e","initializeAuthentication","initializeFirebase","res","auth","onAuthStateChanged","userAuth","uid","setUser","set","email","r","remove","Promise","resolve","currentUser","unsubscribe","user","signUpUsingEmail","fields","createUserWithEmailAndPassword","password","error","authResult","signUpUsingSocial","type","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithRedirect","signUpUsingFacebook","FacebookAuthProvider","auth_type","handleSignOut","noReload","signOut","setTimeout","window","location","reload","createWebsite","code","content","url","unescape","encodeURIComponent","JSON","stringify","body","btoa","createBranchURL","headers","getBranchHeadsURL","method","length","headSha","ref","object","sha","branchExists","reference","slice","message","branch","commitResponse","createBranchBody","createBranchRes","getRelevantBusinessInfo","placeInformation","key","PROXY_URL","locationData","latitude","longitude","timeZoneId","address","name","area","countryCode","phoneNumber","types","utcOffset","website","rawOffset","dstOffset","businessClass","creatorRole","place_id","result","address_components","component","includes","short_name","geometry","lat","lng","formatted_address","formatted_phone_number","utc_offset","long_name","businessInfo","autoCompletePlacesAction","setAutoCompletePlaces"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,SAAR,QAAwB,SAAxB;;AACA,MAAM;AACFC,EAAAA,EAAE,EAAEC;AADF,IAEFC,OAAO,CAAC,MAAD,CAFX;;AAGA,OAAO,eAAeC,kBAAf,CAAkCC,EAAlC,EAAqC;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,EAAtB;AACA,SAAOP,QAAQ,CAACU,SAAT,GAAqBC,UAArB,CAAgC,WAAhC,EAA6CC,GAA7C,GAAmDC,IAAnD,CAAyDC,IAAD,IAAQ;AACnEN,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBK,IAAnB,EAAwB,IAAxB,EAA6BZ,SAAS,CAACa,SAAV,CAAoBC,MAAjD;;AACA,QAAGF,IAAH,EAAS;AACL,YAAMG,UAAU,GAAGH,IAAI,CAACI,IAAL,CAAUC,IAAV,CAAgBC,GAAD,IAAS;AAAC,eAAOA,GAAG,CAACN,IAAJ,GAAWO,MAAX,KAAsBnB,SAAS,CAACa,SAAV,CAAoBC,MAAjD;AAAwD,OAAjF,CAAnB;;AACA,UAAIC,UAAJ,EAAgB;AACZT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,UAAU,CAACH,IAAX,EAAZ,EAA+B,cAA/B,EAA+CP,EAA/C;AACAL,QAAAA,SAAS,CAACa,SAAV,CAAoBO,iBAApB,CAAsCL,UAAU,CAACH,IAAX,EAAtC;AACA,eAAOG,UAAU,CAACH,IAAX,EAAP;AACH;AACJ;AACJ,GAVM,EAUJS,KAVI,CAUGC,CAAD,IAAK;AAAChB,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBe,CAAhB;AAAmB,GAV3B,CAAP;AAYH;AACD,OAAO,SAASC,wBAAT,GAAmC;AACtCC,EAAAA,kBAAkB,GAAGb,IAArB,CAA2Bc,GAAD,IAAO;AAC7BnB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WAAOT,QAAQ,CAAC4B,IAAT,GAAgBC,kBAAhB,CAAmC,MAAOC,QAAP,IAAoB;AAC1D,UAAGA,QAAH,EAAa;AACTtB,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BqB,QAA9B,EAAuC,QAAvC,EAAgDA,QAAQ,CAACC,GAAzD,EADS,CAET;;AACA7B,QAAAA,SAAS,CAACa,SAAV,CAAoBiB,OAApB,CAA4BF,QAA5B;;AACA,YAAI7B,MAAM,CAACW,GAAP,CAAW,YAAX,MAA6B,QAAjC,EAA2C;AACvC,iBAAOZ,QAAQ,CAACU,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCS,GAAzC,CAA8C,GAAEU,QAAQ,CAACC,GAAI,EAA7D,EAAgEE,GAAhE,CAAoE;AAACC,YAAAA,KAAK,EAAEJ,QAAQ,CAACI;AAAjB,WAApE,EACFrB,IADE,CACIsB,CAAD,IAAO;AACTlC,YAAAA,MAAM,CAACmC,MAAP,CAAc,YAAd;AACA5B,YAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqD0B,CAArD;AACH,WAJE,EAIAZ,KAJA,CAIOC,CAAD,IAAO;AACZvB,YAAAA,MAAM,CAACmC,MAAP,CAAc,iBAAd;AACH,WANE,CAAP;AAQH;AACJ;AACJ,KAhBM,CAAP;AAiBH,GAnBD;AAqBH;AACD,OAAO,SAASV,kBAAT,GAA6B;AAChC,SAAO,IAAIW,OAAJ,CAAaC,OAAD,IAAa;AAC5B,QAAItC,QAAQ,CAAC4B,IAAT,GAAgBW,WAApB,EAAiC;AAC7BD,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFD,MAEO;AACH,YAAME,WAAW,GAAGxC,QAAQ,CAAC4B,IAAT,GAAgBC,kBAAhB,CAAoCY,IAAD,IAAU;AAC7DD,QAAAA,WAAW;;AACX,YAAIC,IAAJ,EAAU;AACNH,UAAAA,OAAO,CAAC,IAAD,CAAP;AACH,SAFD,MAEO;AACHA,UAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,OAPmB,CAApB;AAQH;AACJ,GAbM,EAaJf,KAbI,CAaGC,CAAD,IAAO;AACZhB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Be,CAA1B,EADY,CACkB;AACjC,GAfM,CAAP;AAgBH;AAGD,OAAO,eAAekB,gBAAf,CAAgCC,MAAhC,EAAwC;AAC3C,SAAO3C,QAAQ,CAAC4B,IAAT,GAAgBgB,8BAAhB,CAA+CD,MAAM,CAACT,KAAtD,EAA6DS,MAAM,CAACE,QAApE,EAA8EtB,KAA9E,CAAqFuB,KAAD,IAAW;AACnGtC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBqC,KAAlB;AACF,GAFM,EAGFjC,IAHE,CAGIkC,UAAD,IAAgB;AAClB;AACA/C,IAAAA,QAAQ,CAACU,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCS,GAAzC,CAA8C,GAAEhB,MAAM,EAAG,EAAzD,EAA4D6B,GAA5D,CAAgE;AAACC,MAAAA,KAAK,EAACS,MAAM,CAACT;AAAd,KAAhE,EACKrB,IADL,CACWsB,CAAD,IAAO;AACT3B,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6C0B,CAA7C;AACH,KAHL,EAGOZ,KAHP,CAGcC,CAAD,IAAO;AAChBvB,MAAAA,MAAM,CAACmC,MAAP,CAAc,iBAAd;AACH,KALD;AAMH,GAXE,CAAP;AAYH;AAED,OAAO,eAAeY,iBAAf,CAAiCC,IAAjC,EAAuC;AAC1ChD,EAAAA,MAAM,CAACgC,GAAP,CAAW,YAAX,EAAwB,QAAxB;AACA,QAAMiB,QAAQ,GAAG,IAAIlD,QAAQ,CAAC4B,IAAT,CAAcuB,kBAAlB,EAAjB;AACAD,EAAAA,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAA7B;AACA,SAAOrD,QAAQ,CAAC4B,IAAT,GAAgB0B,kBAAhB,CAAmCJ,QAAnC,CAAP;AACH;AAED,OAAO,eAAeK,mBAAf,CAAmCN,IAAnC,EAAyC;AACxC,QAAMC,QAAQ,GAAG,IAAIlD,QAAQ,CAAC4B,IAAT,CAAc4B,oBAAlB,EAAjB;AACAN,EAAAA,QAAQ,CAACE,mBAAT,CAA6B;AAAEK,IAAAA,SAAS,EAAE;AAAb,GAA7B;AACA,SAAOzD,QAAQ,CAAC4B,IAAT,GAAgB0B,kBAAhB,CAAmCJ,QAAnC,CAAP;AACH;AAEL,OAAO,eAAeQ,aAAf,CAA6BC,QAA7B,EAAuC;AAC1C3D,EAAAA,QAAQ,CAAC4B,IAAT,GAAgBgC,OAAhB,GAA0B/C,IAA1B,CAA+B,MAAM;AACjCZ,IAAAA,MAAM,CAACmC,MAAP,CAAc,iBAAd;;AACA,QAAIuB,QAAJ,EAAc;AACV,aAAO,IAAP;AACH;;AACDE,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GARD;AASH;AAGD,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA4BC,OAA5B,EAAqC;AACxC,MAAIC,GAAG,GAAI,4EAAX;AACA5D,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B4D,QAAQ,CAACC,kBAAkB,CAACC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAAD,CAAnB,CAApC;AACA,QAAMM,IAAI,GAAGC,IAAI,CAACL,QAAQ,CAACC,kBAAkB,CAACC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAAD,CAAnB,CAAT,CAAjB;AACA,QAAMQ,eAAe,GAAG,0DAAxB;AACA,QAAMC,OAAO,GAAG;AACZ,qBAAiB,gDADL;AAEZ,oBAAgB,mCAFJ;AAGZ,cAAU;AAHE,GAAhB;AAKA,QAAMC,iBAAiB,GAAG,gEAA1B;AACA,SAAO9E,KAAK,CAAC;AACT+E,IAAAA,MAAM,EAAE,KADC;AACMV,IAAAA,GAAG,EAAES,iBADX;AAETD,IAAAA,OAAO,EAAEA;AAFA,GAAD,CAAL,CAGJ/D,IAHI,CAGEc,GAAD,IAAS;AACb;AACInB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BkB,GAAG,CAACb,IAAhC,EAAsCa,GAAG,CAACb,IAAJ,CAASa,GAAG,CAACb,IAAJ,CAASiE,MAAT,GAAkB,CAA3B,CAAtC;AACA,YAAMC,OAAO,GAAGrD,GAAG,CAACb,IAAJ,CAASK,IAAT,CAAe8D,GAAD,IAASA,GAAG,CAACA,GAAJ,KAAY,iBAAnC,EAAsDC,MAAtD,CAA6DC,GAA7E;AACA,YAAMC,YAAY,GAAGzD,GAAG,CAACb,IAAJ,CAASK,IAAT,CAAekE,SAAD,IAAaA,SAAS,CAACJ,GAAV,CAAcK,KAAd,CAAoB,EAApB,MAA0BpB,IAArD,CAArB;;AACA,UAAGkB,YAAH,EAAiB;AACZ5E,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiC2E,YAAjC,EAA8ClB,IAA9C;AACDE,QAAAA,GAAG,GAACA,GAAG,GAAE,QAAOF,IAAK,EAArB;AAEA,eAAOnE,KAAK,CAAC;AACT+E,UAAAA,MAAM,EAAE,KADC;AACMV,UAAAA,GAAG,EAAEA,GADX;AAETQ,UAAAA,OAAO,EAAEA;AAFA,SAAD,CAAL,CAGJ/D,IAHI,CAGEc,GAAD,IAAS;AACbnB,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BkB,GAA/B,EAAmCuC,IAAnC;AACA,gBAAMiB,GAAG,GAAGxD,GAAG,CAACb,IAAJ,CAASqE,GAArB;AACA,iBAAOpF,KAAK,CAAC;AACT+E,YAAAA,MAAM,EAAE,QADC;AACShE,YAAAA,IAAI,EAAE;AACpByE,cAAAA,OAAO,EAAE,mBADW;AACUpB,cAAAA,OAAO,EAAEM,IADnB;AACyBU,cAAAA,GAAG,EAAEA,GAD9B;AACmCK,cAAAA,MAAM,EAAG,GAAEtB,IAAK;AADnD,aADf;AAITE,YAAAA,GAAG,EAAEA,GAJI;AAKTQ,YAAAA,OAAO,EAAEA;AALA,WAAD,CAAL,CAMJ/D,IANI,CAME4E,cAAD,IAAoB;AACxBjF,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCgF,cAAvC;AACA,mBAAO1F,KAAK,CAAC;AACT+E,cAAAA,MAAM,EAAE,KADC;AACMhE,cAAAA,IAAI,EAAE;AACjByE,gBAAAA,OAAO,EAAE,iBADQ;AACWpB,gBAAAA,OAAO,EAAEM,IADpB;AAC0BU,gBAAAA,GAAG,EAAEA,GAD/B;AACoCK,gBAAAA,MAAM,EAAG,GAAEtB,IAAK;AADpD,eADZ;AAITE,cAAAA,GAAG,EAAEA,GAJI;AAKTQ,cAAAA,OAAO,EAAEA;AALA,aAAD,CAAL,CAMJ/D,IANI,CAMEc,GAAD,IAAO;AAACnB,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCkB,GAAjC;AAAsC,aAN/C,EAMiDJ,KANjD,CAMwDC,CAAD,IAAK;AAAChB,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2Be,CAA3B;AAA8B,aAN3F,CAAP;AAQH,WAhBM,EAgBJD,KAhBI,CAgBGC,CAAD,IAAO;AACZhB,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCe,CAAjC;AAEH,WAnBM,EAmBJD,KAnBI,CAmBGC,CAAD,IAAO;AACZhB,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Be,CAA/B;AAEH,WAtBM,CAAP;AAuBH,SA7BM,CAAP;AA8BH;;AACDhB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBuE,OAAvB;AACA,YAAMU,gBAAgB,GAAG;AACrB,eAAQ,cAAaxB,IAAK,EADL;AAErB,eAAOc;AAFc,OAAzB;AAIA,aAAOjF,KAAK,CAAC;AACT+E,QAAAA,MAAM,EAAE,MADC;AACOhE,QAAAA,IAAI,EAAE4E,gBADb;AAETtB,QAAAA,GAAG,EAAEO,eAFI;AAGTC,QAAAA,OAAO,EAAEA;AAHA,OAAD,CAAL,CAIJ/D,IAJI,CAIE8E,eAAD,IAAqB;AACzBnF,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CkF,eAA1C,EAA2D,6BAA3D;AAEA,eAAO5F,KAAK,CAAC;AACT+E,UAAAA,MAAM,EAAE,KADC;AACMV,UAAAA,GAAG,EAAEA,GADX;AAETQ,UAAAA,OAAO,EAAEA;AAFA,SAAD,CAAL,CAGJ/D,IAHI,CAGEc,GAAD,IAAS;AACbnB,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BkB,GAA/B;AACA,gBAAMwD,GAAG,GAAGxD,GAAG,CAACb,IAAJ,CAASqE,GAArB;AACA,iBAAOpF,KAAK,CAAC;AACT+E,YAAAA,MAAM,EAAE,KADC;AACMhE,YAAAA,IAAI,EAAE;AACjByE,cAAAA,OAAO,EAAE,iBADQ;AACWpB,cAAAA,OAAO,EAAEM,IADpB;AAC0BU,cAAAA,GAAG,EAAEA,GAD/B;AACoCK,cAAAA,MAAM,EAAG,GAAEtB,IAAK;AADpD,aADZ;AAITE,YAAAA,GAAG,EAAEA,GAJI;AAKTQ,YAAAA,OAAO,EAAEA;AALA,WAAD,CAAL,CAMJ/D,IANI,CAME4E,cAAD,IAAoB;AACxBjF,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BgF,cAA/B;AAEH,WATM,EASJlE,KATI,CASGC,CAAD,IAAO;AACZhB,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCe,CAAjC;AAEH,WAZM,EAYJD,KAZI,CAYGC,CAAD,IAAO;AACZhB,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Be,CAA/B;AAEH,WAfM,CAAP;AAgBH,SAtBM,EAsBJD,KAtBI,CAsBGC,CAAD,IAAO;AACZhB,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCe,CAAjC;AAEH,SAzBM,EAyBJD,KAzBI,CAyBGC,CAAD,IAAO;AACZhB,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Be,CAA/B;AAEH,SA5BM,CAAP;AA6BH,OApCM,EAoCJD,KApCI,CAoCGC,CAAD,IAAK;AACVhB,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6Be,CAA7B;AAEH,OAvCM,CAAP;AAwCH;AACJ,GAzFM,CAAP;AA0FH;AAAA;AACD,OAAO,eAAeoE,uBAAf,CAAuCC,gBAAvC,EAAyDC,GAAzD,EAA8D;AACjE,QAAMC,SAAS,GAAG,+CAAlB;;AACA,MAAI;AACA,UAAMC,YAAY,GAAG;AACjBjC,MAAAA,QAAQ,EAAE;AAACkC,QAAAA,QAAQ,EAAE,EAAX;AAAeC,QAAAA,SAAS,EAAE;AAA1B,OADO;AAEjBC,MAAAA,UAAU,EAAE,EAFK;AAGjBC,MAAAA,OAAO,EAAE,EAHQ;AAIjBC,MAAAA,IAAI,EAAE,EAJW;AAKjBC,MAAAA,IAAI,EAAE,UALW;AAMjBC,MAAAA,WAAW,EAAE,IANI;AAOjBC,MAAAA,WAAW,EAAE,EAPI;AAQjBC,MAAAA,KAAK,EAAE,EARU;AASjBC,MAAAA,SAAS,EAAE,EATM;AAUjBC,MAAAA,OAAO,EAAE,EAVQ;AAWjBC,MAAAA,SAAS,EAAE,EAXM;AAYjBC,MAAAA,SAAS,EAAE,EAZM;AAajBC,MAAAA,aAAa,EAAE,YAbE;AAcjB;AACAC,MAAAA,WAAW,EAAE;AAfI,KAArB,CADA,CAkBA;;AACA,UAAM3C,GAAG,GAAI,oEAAmEE,kBAAkB,CAACuB,gBAAgB,CAACmB,QAAlB,CAA4B,QAAO1C,kBAAkB,CAACwB,GAAD,CAAM,EAA7J;AACA,UAAMnE,GAAG,GAAG,MAAM5B,KAAK,CAAC;AACpB+E,MAAAA,MAAM,EAAE,KADY;AAEpBV,MAAAA,GAAG,EAAE2B,SAAS,GAAG3B,GAFG;AAGpBQ,MAAAA,OAAO,EAAE;AACL,4BAAoB;AADf;AAHW,KAAD,CAAvB;AAQA,UAAM2B,WAAW,GAAG5E,GAAG,CAACb,IAAJ,CAASmG,MAAT,CAAgBC,kBAAhB,CAAmC/F,IAAnC,CAAyCgG,SAAD,IAAeA,SAAS,CAACV,KAAV,CAAgBW,QAAhB,CAAyB,SAAzB,CAAvD,CAApB;AACA,QAAId,IAAJ;;AACA,QAAIC,WAAW,CAACc,UAAZ,KAA2B,IAA3B,IAAmCd,WAAW,CAACc,UAAZ,KAA2B,IAAlE,EAAwE;AACpEf,MAAAA,IAAI,GAAG3E,GAAG,CAACb,IAAJ,CAASmG,MAAT,CAAgBC,kBAAhB,CAAmC/F,IAAnC,CAAyCgG,SAAD,IAAeA,SAAS,CAACV,KAAV,CAAgBW,QAAhB,CAAyB,6BAAzB,CAAvD,CAAP;AACH,KAFD,MAEO;AACHd,MAAAA,IAAI,GAAG3E,GAAG,CAACb,IAAJ,CAASmG,MAAT,CAAgBC,kBAAhB,CAAmC/F,IAAnC,CAAyCgG,SAAD,IAAeA,SAAS,CAACV,KAAV,CAAgBW,QAAhB,CAAyB,6BAAzB,CAAvD,CAAP;;AACA,UAAI,CAACd,IAAL,EAAW;AACPA,QAAAA,IAAI,GAAG3E,GAAG,CAACb,IAAJ,CAASmG,MAAT,CAAgBC,kBAAhB,CAAmC/F,IAAnC,CAAyCgG,SAAD,IAAeA,SAAS,CAACV,KAAV,CAAgBW,QAAhB,CAAyB,6BAAzB,CAAvD,CAAP;AACH;AACJ;;AACDpB,IAAAA,YAAY,CAACK,IAAb,GAAoB1E,GAAG,CAACb,IAAJ,CAASmG,MAAT,CAAgBZ,IAApC;AACAL,IAAAA,YAAY,CAACjC,QAAb,CAAsBkC,QAAtB,GAAiCtE,GAAG,CAACb,IAAJ,CAASmG,MAAT,CAAgBK,QAAhB,CAAyBvD,QAAzB,CAAkCwD,GAAnE;AACAvB,IAAAA,YAAY,CAACjC,QAAb,CAAsBmC,SAAtB,GAAkCvE,GAAG,CAACb,IAAJ,CAASmG,MAAT,CAAgBK,QAAhB,CAAyBvD,QAAzB,CAAkCyD,GAApE;AACAxB,IAAAA,YAAY,CAACI,OAAb,GAAuBzE,GAAG,CAACb,IAAJ,CAASmG,MAAT,CAAgBQ,iBAAvC;AACAzB,IAAAA,YAAY,CAACQ,WAAb,GAA2B7E,GAAG,CAACb,IAAJ,CAASmG,MAAT,CAAgBS,sBAA3C;AACA1B,IAAAA,YAAY,CAACS,KAAb,GAAqB9E,GAAG,CAACb,IAAJ,CAASmG,MAAT,CAAgBR,KAArC;AACAT,IAAAA,YAAY,CAACU,SAAb,GAAyB/E,GAAG,CAACb,IAAJ,CAASmG,MAAT,CAAgBU,UAAzC;AACA3B,IAAAA,YAAY,CAACW,OAAb,GAAuBhF,GAAG,CAACb,IAAJ,CAASmG,MAAT,CAAgBN,OAAvC;;AACA,QAAIJ,WAAW,CAACc,UAAZ,IAA0Bf,IAA1B,IAAkCA,IAAI,CAACe,UAA3C,EAAuD;AACnDrB,MAAAA,YAAY,CAACO,WAAb,GAA2BA,WAAW,CAACc,UAAvC;AACArB,MAAAA,YAAY,CAACM,IAAb,GAAoBA,IAAI,CAACsB,SAAzB;AACH,KAHD,MAGO;AACH;AACH;;AACD5H,IAAAA,QAAQ,CAACU,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCS,GAAzC,CAA8C,GAAElB,SAAS,CAACa,SAAV,CAAoBC,MAAO,EAA3E,EAA8EiB,GAA9E,CAAkF;AAAC4F,MAAAA,YAAY,EAAE7B;AAAf,KAAlF,EACKnF,IADL,CACWsB,CAAD,IAAO,CAEZ,CAHL,EAGOZ,KAHP,CAGcC,CAAD,IAAK,CAAE,CAHpB;AAIA,WAAOwE,YAAP,CAxDA,CAyDA;AACH,GA1DD,CA0DC,OAAMxE,CAAN,EAAQ;AACLhB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;AACJ;AAED,OAAO,eAAeqH,wBAAf,CAAwChH,IAAxC,EAA6CgF,GAA7C,EAAiD;AACpD,QAAMC,SAAS,GAAG,+CAAlB;AACAvF,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBsF,SAAjB;AACA,QAAM3B,GAAG,GAAI,sEAAqEE,kBAAkB,CAACxD,IAAD,CAAO,QAAOwD,kBAAkB,CAACwB,GAAD,CAAM,EAA1I;AACA,QAAMnE,GAAG,GAAG,MAAM5B,KAAK,CAAC;AACpB+E,IAAAA,MAAM,EAAE,KADY;AAEpBV,IAAAA,GAAG,EAAE2B,SAAS,GAAG3B,GAFG;AAGpBQ,IAAAA,OAAO,EAAE;AACL,0BAAoB;AADf;AAHW,GAAD,CAAvB;AAQA,SAAO1E,SAAS,CAACa,SAAV,CAAoBgH,qBAApB,CAA0CpG,GAAG,CAACb,IAA9C,CAAP;AACH","sourcesContent":["import axios from 'axios';\nimport firebase from \"firebase/compat\";\nimport cookie from \"js-cookie\";\nimport {rootStore} from './Store';\nconst {\n    v4: uuidv4,\n} = require('uuid');\nexport async function getTemplatesWithId(id){\n    console.log('with id',id);\n    return firebase.firestore().collection(\"templates\").get().then((data)=>{\n        console.log('data',data,'id',rootStore.pageStore.userId);\n        if(data) {\n            const dataToLoad = data.docs.find((doc) => {return doc.data().author === rootStore.pageStore.userId});\n            if (dataToLoad) {\n                console.log(dataToLoad.data(), 'LOAD with ID', id);\n                rootStore.pageStore.setActiveTemplate(dataToLoad.data());\n                return dataToLoad.data();\n            }\n        }\n    }).catch((e)=>{console.log('e',e)})\n\n}\nexport function initializeAuthentication(){\n    initializeFirebase().then((res)=>{\n        console.log('FB, initialized.')\n        return firebase.auth().onAuthStateChanged(async (userAuth) => {\n            if(userAuth) {\n                console.log('on auth state:', userAuth,'...UID',userAuth.uid);\n                // todo abstract loading screen from auth initialization\n                rootStore.pageStore.setUser(userAuth);\n                if (cookie.get('signInType') === 'google') {\n                    return firebase.firestore().collection(\"users\").doc(`${userAuth.uid}`).set({email: userAuth.email})\n                        .then((r) => {\n                            cookie.remove('signInType');\n                            console.log(\"Google Document successfully written!\", r);\n                        }).catch((e) => {\n                            cookie.remove('userHasLoggedIn');\n                        });\n\n                }\n            }\n        });\n    });\n\n}\nexport function initializeFirebase(){\n    return new Promise((resolve) => {\n        if (firebase.auth().currentUser) {\n            resolve(true);\n        } else {\n            const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n                unsubscribe();\n                if (user) {\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n            });\n        }\n    }).catch((e) => {\n        console.log('init error', e); // throw new error\n    });\n}\n\n\nexport async function signUpUsingEmail(fields) {\n    return firebase.auth().createUserWithEmailAndPassword(fields.email, fields.password).catch((error) => {\n       console.log('...',error);\n    })\n        .then((authResult) => {\n            // @ts-ignore\n            firebase.firestore().collection(\"users\").doc(`${uuidv4()}`).set({email:fields.email})\n                .then((r) => {\n                    console.log(\"Document successfully written!\",r);\n                }).catch((e) => {\n                cookie.remove('userHasLoggedIn');\n            });\n        });\n}\n\nexport async function signUpUsingSocial(type) {\n    cookie.set('signInType','google');\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.setCustomParameters({ prompt: 'select_account' });\n    return firebase.auth().signInWithRedirect(provider);\n}\n\nexport async function signUpUsingFacebook(type) {\n        const provider = new firebase.auth.FacebookAuthProvider();\n        provider.setCustomParameters({ auth_type: 'https' });\n        return firebase.auth().signInWithRedirect(provider);\n    }\n\nexport async function handleSignOut(noReload) {\n    firebase.auth().signOut().then(() => {\n        cookie.remove('userHasLoggedIn');\n        if (noReload) {\n            return true;\n        }\n        setTimeout(() => {\n            window.location.reload();\n        }, 1000);\n    });\n}\n\n\nexport function createWebsite(code,content) {\n    let url = `https://api.github.com/repos/H0l0AI/Marketslick/contents/src/contents.json`;\n    console.log('gonna BTOA it',unescape(encodeURIComponent(JSON.stringify(content))));\n    const body = btoa(unescape(encodeURIComponent(JSON.stringify(content))));\n    const createBranchURL = 'https://api.github.com/repos/H0l0AI/Marketslick/git/refs';\n    const headers = {\n        'Authorization': 'token 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',\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Accept': 'application/vnd.github.v3+json'\n    };\n    const getBranchHeadsURL = 'https://api.github.com/repos/H0l0AI/Marketslick/git/refs/heads';\n    return axios({\n        method: 'get', url: getBranchHeadsURL,\n        headers: headers,\n    }).then((res) => {\n        {\n            console.log('GITHUB= res,', res.data, res.data[res.data.length - 1]);\n            const headSha = res.data.find((ref) => ref.ref === \"refs/heads/main\").object.sha;\n            const branchExists = res.data.find((reference)=>reference.ref.slice(11)===code);\n            if(branchExists) {\n                 console.log('THIS BRANCH EXISTS',branchExists,code)\n                url=url+`?ref=${code}`\n\n                return axios({\n                    method: 'get', url: url,\n                    headers: headers,\n                }).then((res) => {\n                    console.log('GITHUB RES GET:', res,code);\n                    const sha = res.data.sha;\n                    return axios({\n                        method: 'delete', data: {\n                            message: \"Automation delete\", content: body, sha: sha, branch: `${code}`\n                        },\n                        url: url,\n                        headers: headers,\n                    }).then((commitResponse) => {\n                        console.log('LETS FUCKING GO DELETED', commitResponse);\n                        return axios({\n                            method: 'put', data: {\n                                message: \"Automation sync\", content: body, sha: sha, branch: `${code}`\n                            },\n                            url: url,\n                            headers: headers,\n                        }).then((res)=>{console.log('ADDED THE NEW SHIT',res)}).catch((e)=>{console.log('put not work',e)})\n\n                    }).catch((e) => {\n                        console.log('axios GET ERROR 4', e);\n\n                    }).catch((e) => {\n                        console.log('axs get error 3', e);\n\n                    })\n                })\n            }\n            console.log('HEADSHA', headSha);\n            const createBranchBody = {\n                \"ref\": `refs/heads/${code}`,\n                \"sha\": headSha\n            };\n            return axios({\n                method: 'post', data: createBranchBody,\n                url: createBranchURL,\n                headers: headers,\n            }).then((createBranchRes) => {\n                console.log('putRes DID HE FIRE IT OFF?', createBranchRes, 'DO I NEED CREATESHA EARLIER');\n\n                return axios({\n                    method: 'get', url: url,\n                    headers: headers,\n                }).then((res) => {\n                    console.log('GITHUB RES GET:', res);\n                    const sha = res.data.sha;\n                    return axios({\n                        method: 'put', data: {\n                            message: \"Automation sync\", content: body, sha: sha, branch: `${code}`\n                        },\n                        url: url,\n                        headers: headers,\n                    }).then((commitResponse) => {\n                        console.log('LETS FUCKING GO', commitResponse);\n\n                    }).catch((e) => {\n                        console.log('axios GET ERROR 4', e);\n\n                    }).catch((e) => {\n                        console.log('axs get error 3', e);\n\n                    })\n                }).catch((e) => {\n                    console.log('axios GET ERROR 2', e);\n\n                }).catch((e) => {\n                    console.log('axs get error 1', e);\n\n                })\n            }).catch((e)=>{\n                console.log('couldnt create',e);\n\n            });\n        }\n    });\n};\nexport async function getRelevantBusinessInfo(placeInformation, key) {\n    const PROXY_URL = 'https://cryptic-badlands-53121.herokuapp.com/';\n    try {\n        const locationData = {\n            location: {latitude: '', longitude: ''},\n            timeZoneId: '',\n            address: '',\n            name: '',\n            area: 'Auckland',\n            countryCode: 'NZ',\n            phoneNumber: '',\n            types: [],\n            utcOffset: '',\n            website: '',\n            rawOffset: '',\n            dstOffset: '',\n            businessClass: 'management',\n            // creator role for practice\n            creatorRole: 'practice_admin',\n        };\n        // todo get geolocation ...address external\n        const url = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${encodeURIComponent(placeInformation.place_id)}&key=${encodeURIComponent(key)}`;\n        const res = await axios({\n            method: 'get',\n            url: PROXY_URL + url,\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest',\n            }\n\n        });\n        const countryCode = res.data.result.address_components.find((component) => component.types.includes('country'));\n        let area;\n        if (countryCode.short_name === 'NZ' || countryCode.short_name !== 'AU') {\n            area = res.data.result.address_components.find((component) => component.types.includes('administrative_area_level_1'));\n        } else {\n            area = res.data.result.address_components.find((component) => component.types.includes('administrative_area_level_2'));\n            if (!area) {\n                area = res.data.result.address_components.find((component) => component.types.includes('administrative_area_level_1'))\n            }\n        }\n        locationData.name = res.data.result.name;\n        locationData.location.latitude = res.data.result.geometry.location.lat;\n        locationData.location.longitude = res.data.result.geometry.location.lng;\n        locationData.address = res.data.result.formatted_address;\n        locationData.phoneNumber = res.data.result.formatted_phone_number;\n        locationData.types = res.data.result.types;\n        locationData.utcOffset = res.data.result.utc_offset;\n        locationData.website = res.data.result.website;\n        if (countryCode.short_name && area && area.short_name) {\n            locationData.countryCode = countryCode.short_name;\n            locationData.area = area.long_name;\n        } else {\n            return;\n        }\n        firebase.firestore().collection(\"users\").doc(`${rootStore.pageStore.userId}`).set({businessInfo: locationData})\n            .then((r) => {\n\n            }).catch((e)=>{});\n        return locationData;\n        //create business in firebase here\n    }catch(e){\n        console.log('GMB error');\n    }\n}\n\nexport async function autoCompletePlacesAction(data,key){\n    const PROXY_URL = 'https://cryptic-badlands-53121.herokuapp.com/';\n    console.log('?', PROXY_URL);\n    const url = `https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(data)}&key=${encodeURIComponent(key)}`;\n    const res = await axios({\n        method: 'get',\n        url: PROXY_URL + url,\n        headers: {\n            'X-Requested-With': 'XMLHttpRequest',\n        }\n\n    });\n    return rootStore.pageStore.setAutoCompletePlaces(res.data);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}