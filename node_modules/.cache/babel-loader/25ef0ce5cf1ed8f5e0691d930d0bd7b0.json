{"ast":null,"code":"import { forwardRef, memo } from \"react\";\nimport { isUsingStaticRendering } from \"./staticRendering\";\nimport { useObserver } from \"./useObserver\";\nvar warnObserverOptionsDeprecated = true;\nvar hasSymbol = typeof Symbol === \"function\" && Symbol.for; // Using react-is had some issues (and operates on elements, not on types), see #608 / #609\n\nvar ReactForwardRefSymbol = hasSymbol ? Symbol.for(\"react.forward_ref\") : typeof forwardRef === \"function\" && forwardRef(function (props) {\n  return null;\n})[\"$$typeof\"];\nvar ReactMemoSymbol = hasSymbol ? Symbol.for(\"react.memo\") : typeof memo === \"function\" && memo(function (props) {\n  return null;\n})[\"$$typeof\"]; // n.b. base case is not used for actual typings or exported in the typing files\n\nexport function observer(baseComponent, // TODO remove in next major\noptions) {\n  var _a;\n\n  if (process.env.NODE_ENV !== \"production\" && warnObserverOptionsDeprecated && options) {\n    warnObserverOptionsDeprecated = false;\n    console.warn(\"[mobx-react-lite] `observer(fn, { forwardRef: true })` is depreacted, use `observer(React.forwardRef(fn))`\");\n  }\n\n  if (ReactMemoSymbol && baseComponent[\"$$typeof\"] === ReactMemoSymbol) {\n    throw new Error(\"[mobx-react-lite] You are trying to use `observer` on a function component wrapped in either another `observer` or `React.memo`. The observer already applies 'React.memo' for you.\");\n  } // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n\n\n  if (isUsingStaticRendering()) {\n    return baseComponent;\n  }\n\n  var useForwardRef = (_a = options === null || options === void 0 ? void 0 : options.forwardRef) !== null && _a !== void 0 ? _a : false;\n  var render = baseComponent;\n  var baseComponentName = baseComponent.displayName || baseComponent.name; // If already wrapped with forwardRef, unwrap,\n  // so we can patch render and apply memo\n\n  if (ReactForwardRefSymbol && baseComponent[\"$$typeof\"] === ReactForwardRefSymbol) {\n    useForwardRef = true;\n    render = baseComponent[\"render\"];\n\n    if (typeof render !== \"function\") {\n      throw new Error(\"[mobx-react-lite] `render` property of ForwardRef was not a function\");\n    }\n  }\n\n  var observerComponent = function (props, ref) {\n    return useObserver(function () {\n      return render(props, ref);\n    }, baseComponentName);\n  }; // Don't set `displayName` for anonymous components,\n  // so the `displayName` can be customized by user, see #3192.\n\n\n  if (baseComponentName !== \"\") {\n    ;\n    observerComponent.displayName = baseComponentName;\n  } // Support legacy context: `contextTypes` must be applied before `memo`\n\n\n  if (baseComponent.contextTypes) {\n    ;\n    observerComponent.contextTypes = baseComponent.contextTypes;\n  }\n\n  if (useForwardRef) {\n    // `forwardRef` must be applied prior `memo`\n    // `forwardRef(observer(cmp))` throws:\n    // \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))\"\n    observerComponent = forwardRef(observerComponent);\n  } // memo; we are not interested in deep updates\n  // in props; we assume that if deep objects are changed,\n  // this is in observables, which would have been tracked anyway\n\n\n  observerComponent = memo(observerComponent);\n  copyStaticProperties(baseComponent, observerComponent);\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    Object.defineProperty(observerComponent, \"contextTypes\", {\n      set: function () {\n        var _a;\n\n        throw new Error(\"[mobx-react-lite] `\".concat(this.displayName || ((_a = this.type) === null || _a === void 0 ? void 0 : _a.displayName) || \"Component\", \".contextTypes` must be set before applying `observer`.\"));\n      }\n    });\n  }\n\n  return observerComponent;\n} // based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\n\nvar hoistBlackList = {\n  $$typeof: true,\n  render: true,\n  compare: true,\n  type: true,\n  // Don't redefine `displayName`,\n  // it's defined as getter-setter pair on `memo` (see #3192).\n  displayName: true\n};\n\nfunction copyStaticProperties(base, target) {\n  Object.keys(base).forEach(function (key) {\n    if (!hoistBlackList[key]) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["forwardRef","memo","isUsingStaticRendering","useObserver","warnObserverOptionsDeprecated","hasSymbol","Symbol","for","ReactForwardRefSymbol","props","ReactMemoSymbol","observer","baseComponent","options","process","env","NODE_ENV","console","warn","Error","useForwardRef","_a","render","baseComponentName","displayName","name","observerComponent","ref","contextTypes","copyStaticProperties","Object","defineProperty","set","type","hoistBlackList","$$typeof","compare","base","target","keys","forEach","key","getOwnPropertyDescriptor"],"sourceRoot":"","sources":["../src/observer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}