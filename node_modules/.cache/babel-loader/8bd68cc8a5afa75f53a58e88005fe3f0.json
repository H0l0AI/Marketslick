{"ast":null,"code":"import { rootStore } from './Store'; // Imports\n\nconst axios = require(\"axios\"); // API key\n\n\nconst API_KEY = process.env.REACT_APP_RYTR_KEY; // Step 1 - Identify language ID (use language list API endpoint)\n\nconst languageIdEnglish = \"607adac76f8fe5000c1e636d\"; // Step 2 - Identify tone ID (use tone list API endpoint)\n\nconst toneIdConvincing = \"60572a639bdd4272b8fe358b\"; // Step 3 - Identify use case ID (use use-case list API endpoint)\n\nconst useCaseMagicCommandId = \"60ed7113732a5b000cf99e8e\";\nconst useCaseJobDescriptionId = \"60586b31cdebbb000c21058d\";\nconst useCaseDescriptionId = \"605838118c0a4a000c69c969\";\nconst useCaseProductId = \"605832f78c0a4a000c69c960\";\nconst useCaseTagline = \"605838118c0a4a000c69c968\";\nconst useCaseLandingPageId = \"605835258c0a4a000c69c962\";\nconst useCaseProfileId = \"60633095de064b000c8f5cc8\";\nconst useCaseBioId = \"60633095de064b000c8f5cc8\";\nconst useCaseBlogId = \"60584cf2c2cdaa000c2a7954\";\nconst PROXY_URL = process.env.REACT_APP_PROXY_URL; //topic\n//keywords\n// use-case\n\nasync function caseById() {\n  try {\n    return axios({\n      method: \"get\",\n      url: PROXY_URL + `https://api.rytr.me/v1/use-cases`,\n      headers: {\n        Authentication: `Bearer ${API_KEY}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      console.log('CASE LIST', res);\n      return res;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n\n  return null;\n} // use-case detail\n\n\nasync function caseDetailById(useCaseId) {\n  try {\n    axios({\n      method: \"get\",\n      url: PROXY_URL + `https://api.rytr.me/v1/usage`,\n      headers: {\n        Authentication: `Bearer ${API_KEY}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      console.log('CURRENT USAGE', res);\n      return res;\n    });\n    return axios({\n      method: \"get\",\n      url: PROXY_URL + `https://api.rytr.me/v1/use-cases/${useCaseId}`,\n      headers: {\n        Authentication: `Bearer ${API_KEY}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      console.log('CASE DETAIL', res);\n      return res;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n\n  return null;\n} // ryte\n\n\nasync function ryte(_ref) {\n  let {\n    useCaseId,\n    inputContexts\n  } = _ref;\n\n  try {\n    return axios({\n      method: \"post\",\n      url: PROXY_URL + \"https://api.rytr.me/v1/ryte\",\n      headers: {\n        Authentication: `Bearer ${API_KEY}`,\n        \"Content-Type\": \"application/json\"\n      },\n      data: {\n        languageId: languageIdEnglish,\n        toneId: toneIdConvincing,\n        useCaseId,\n        inputContexts,\n        variations: 1,\n        userId: \"USER1\",\n        format: \"html\"\n      }\n    }).then(res => {\n      console.log('final res', res);\n      rootStore.pageStore.setMainPageContent(res.data.data[0]);\n      return res.data.data[0].text;\n    }).catch(e => {\n      console.log('final error', e);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n/*0: {label: 'Website name', placeholder: 'Rytr', keyLabel: 'WEBSITE_NAME_LABEL', inputType: 'text', inputMaximumCharacters: 25, …}\n1: {label: 'About website', placeholder: 'AI writer that generates content instantly', keyLabel: 'ABOUT_WEBSITE_LABEL', inputType: 'text', inputMaximumCharacters: 75, …}\n2: {label: 'Features', placeholder: '- Uses language AI and copywriting formulas to gen…ast, affordable, and works well on mobile devices', keyLabel: 'FEATURES_LABEL', inputType: 'textarea', inputMaximumCharacters: 300, …}\n*/\n\n\nexport async function testRytrBlurb(businessName, businessTags) {\n  const usecaseList = await caseById(); //useCaseTagline\n  //\"605838118c0a4a000c69c968\"\n  //TAGLINE\n  //\"DESCRIPTION_LABEL\"\n\n  let btags = `${businessName} is a ` + businessTags;\n  const useCaseTag = await caseDetailById(useCaseTagline);\n  console.log('blurb', useCaseTag);\n  let inputContexts = {\n    [useCaseTag.data.data.contextInputs[0].keyLabel]: btags\n  };\n  console.log('inut', inputContexts);\n  let output = await ryte({\n    useCaseId: useCaseTag.data.data._id,\n    inputContexts\n  });\n  console.log(\"Output blurb CONTENT:\", output);\n  return output;\n}\n;\nexport async function testRytrMain(businessName, businessBlurb, businessFeatures) {\n  const usecaseList = await caseById();\n  const useCaseProduct = await caseDetailById(useCaseProductId);\n  console.log('desc', useCaseProduct);\n  let inputContexts = {\n    [useCaseProduct.data.data.contextInputs[0].keyLabel]: businessName,\n    [useCaseProduct.data.data.contextInputs[1].keyLabel]: businessFeatures\n  };\n  console.log('inut', inputContexts);\n  let output = await ryte({\n    useCaseId: useCaseProduct.data.data._id,\n    inputContexts\n  });\n  console.log(\"Output PAGE CONTENT:\", output);\n  return output;\n}\n;\nexport async function testRytrAbout(businessName, businessFeatures, businessBlurb) {\n  const usecaseList = await caseById(); //useCaseProfile\n  //   //\"ABOUT_YOU_LABEL\"\n  //     //\"60633095de064b000c8f5cc9\"\n\n  let busFeaturesInput = `We are ${businessName}. ${businessFeatures}`;\n  const useCaseBio = await caseDetailById(useCaseBlogId);\n  console.log('landing', useCaseBio);\n  let inputContexts = {\n    [useCaseBio.data.data.contextInputs[0].keyLabel]: businessName,\n    [useCaseBio.data.data.contextInputs[1].keyLabel]: businessBlurb,\n    [useCaseBio.data.data.contextInputs[2].keyLabel]: busFeaturesInput\n  };\n  console.log('inut', inputContexts);\n  let output = await ryte({\n    useCaseId: useCaseBio.data.data._id,\n    inputContexts\n  });\n  console.log(\"Output PAGE CONTENT:\", output);\n  return output;\n}\n;","map":{"version":3,"sources":["/Users/aider/WebstormProjects/Marketslick/Marketslick/src/stores/ContentService.js"],"names":["rootStore","axios","require","API_KEY","process","env","REACT_APP_RYTR_KEY","languageIdEnglish","toneIdConvincing","useCaseMagicCommandId","useCaseJobDescriptionId","useCaseDescriptionId","useCaseProductId","useCaseTagline","useCaseLandingPageId","useCaseProfileId","useCaseBioId","useCaseBlogId","PROXY_URL","REACT_APP_PROXY_URL","caseById","method","url","headers","Authentication","then","res","console","log","error","caseDetailById","useCaseId","ryte","inputContexts","data","languageId","toneId","variations","userId","format","pageStore","setMainPageContent","text","catch","e","testRytrBlurb","businessName","businessTags","usecaseList","btags","useCaseTag","contextInputs","keyLabel","output","_id","testRytrMain","businessBlurb","businessFeatures","useCaseProduct","testRytrAbout","busFeaturesInput","useCaseBio"],"mappings":"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","sourcesContent":["import {rootStore} from './Store';\n\n// Imports\nconst axios = require(\"axios\");\n\n\n// API key\nconst API_KEY = process.env.REACT_APP_RYTR_KEY;\n\n// Step 1 - Identify language ID (use language list API endpoint)\nconst languageIdEnglish = \"607adac76f8fe5000c1e636d\";\n\n// Step 2 - Identify tone ID (use tone list API endpoint)\nconst toneIdConvincing = \"60572a639bdd4272b8fe358b\";\n\n// Step 3 - Identify use case ID (use use-case list API endpoint)\nconst useCaseMagicCommandId = \"60ed7113732a5b000cf99e8e\";\nconst useCaseJobDescriptionId = \"60586b31cdebbb000c21058d\";\nconst useCaseDescriptionId=\"605838118c0a4a000c69c969\"\n\nconst useCaseProductId=\"605832f78c0a4a000c69c960\";\nconst useCaseTagline=\"605838118c0a4a000c69c968\";\n\nconst useCaseLandingPageId = \"605835258c0a4a000c69c962\";\nconst useCaseProfileId = \"60633095de064b000c8f5cc8\";\nconst useCaseBioId = \"60633095de064b000c8f5cc8\";\nconst useCaseBlogId = \"60584cf2c2cdaa000c2a7954\";\nconst PROXY_URL = process.env.REACT_APP_PROXY_URL;\n//topic\n//keywords\n\n\n// use-case\nasync function caseById() {\n\n    try {\n        return axios({\n            method: \"get\",\n            url: PROXY_URL+`https://api.rytr.me/v1/use-cases`,\n            headers: {\n                Authentication: `Bearer ${API_KEY}`,\n                \"Content-Type\": \"application/json\",\n            },\n        }).then((res)=>{console.log('CASE LIST',res); return res});\n    } catch (error) {\n        console.log(error);\n    }\n\n    return null;\n}\n// use-case detail\nasync function caseDetailById(useCaseId) {\n\n    try {\n        axios({\n            method: \"get\",\n            url: PROXY_URL+`https://api.rytr.me/v1/usage`,\n            headers: {\n                Authentication: `Bearer ${API_KEY}`,\n                \"Content-Type\": \"application/json\",\n            },\n        }).then((res)=>{console.log('CURRENT USAGE',res); return res});\n        return axios({\n            method: \"get\",\n            url: PROXY_URL+`https://api.rytr.me/v1/use-cases/${useCaseId}`,\n            headers: {\n                Authentication: `Bearer ${API_KEY}`,\n                \"Content-Type\": \"application/json\",\n            },\n        }).then((res)=>{console.log('CASE DETAIL',res); return res});\n    } catch (error) {\n        console.log(error);\n    }\n\n    return null;\n}\n\n// ryte\nasync function ryte({ useCaseId, inputContexts }) {\n    try {\n        return axios({\n            method: \"post\",\n            url: PROXY_URL+\"https://api.rytr.me/v1/ryte\",\n            headers: {\n                Authentication: `Bearer ${API_KEY}`,\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                languageId: languageIdEnglish,\n                toneId: toneIdConvincing,\n                useCaseId,\n                inputContexts,\n                variations: 1,\n                userId: \"USER1\",\n                format: \"html\",\n            },\n        }).then((res)=>{console.log('final res',res);\n            rootStore.pageStore.setMainPageContent(res.data.data[0]);\n            return res.data.data[0].text;\n        }).catch((e)=>{\n            console.log('final error',e);\n        });\n    } catch (error) {\n        console.log(error);\n    }\n}\n/*0: {label: 'Website name', placeholder: 'Rytr', keyLabel: 'WEBSITE_NAME_LABEL', inputType: 'text', inputMaximumCharacters: 25, …}\n1: {label: 'About website', placeholder: 'AI writer that generates content instantly', keyLabel: 'ABOUT_WEBSITE_LABEL', inputType: 'text', inputMaximumCharacters: 75, …}\n2: {label: 'Features', placeholder: '- Uses language AI and copywriting formulas to gen…ast, affordable, and works well on mobile devices', keyLabel: 'FEATURES_LABEL', inputType: 'textarea', inputMaximumCharacters: 300, …}\n*/\nexport async function testRytrBlurb(businessName,businessTags){\n    const usecaseList = await caseById();\n    //useCaseTagline\n    //\"605838118c0a4a000c69c968\"\n    //TAGLINE\n    //\"DESCRIPTION_LABEL\"\n    let btags = `${businessName} is a `+businessTags;\n    const useCaseTag = await caseDetailById(\n        useCaseTagline\n    );\n    console.log('blurb',useCaseTag);\n\n    let inputContexts = {\n        [useCaseTag.data.data.contextInputs[0].keyLabel]: btags,\n    };\n    console.log('inut',inputContexts);\n\n    let output = await ryte({\n        useCaseId: useCaseTag.data.data._id,\n        inputContexts,\n    });\n\n    console.log(\"Output blurb CONTENT:\",output);\n    return output;\n};\nexport async function testRytrMain(businessName,businessBlurb,businessFeatures){\n    const usecaseList = await caseById();\n    const useCaseProduct = await caseDetailById(\n        useCaseProductId\n    );\n    console.log('desc',useCaseProduct);\n\n    let inputContexts = {\n        [useCaseProduct.data.data.contextInputs[0].keyLabel]: businessName,\n        [useCaseProduct.data.data.contextInputs[1].keyLabel]: businessFeatures,\n    };\n    console.log('inut',inputContexts);\n\n    let output = await ryte({\n        useCaseId: useCaseProduct.data.data._id,\n        inputContexts,\n    });\n\n    console.log(\"Output PAGE CONTENT:\",output);\n    return output;\n};\nexport async function testRytrAbout(businessName,businessFeatures,businessBlurb){\n    const usecaseList = await caseById();\n    //useCaseProfile\n    //   //\"ABOUT_YOU_LABEL\"\n    //     //\"60633095de064b000c8f5cc9\"\n    let busFeaturesInput = `We are ${businessName}. ${businessFeatures}`\n    const useCaseBio = await caseDetailById(\n        useCaseBlogId\n    );\n    console.log('landing',useCaseBio);\n\n    let inputContexts = {\n        [useCaseBio.data.data.contextInputs[0].keyLabel]: businessName,\n        [useCaseBio.data.data.contextInputs[1].keyLabel]: businessBlurb,\n        [useCaseBio.data.data.contextInputs[2].keyLabel]: busFeaturesInput,\n    };\n    console.log('inut',inputContexts);\n\n    let output = await ryte({\n        useCaseId: useCaseBio.data.data._id,\n        inputContexts,\n    });\n\n    console.log(\"Output PAGE CONTENT:\",output);\n    return output;\n};"]},"metadata":{},"sourceType":"module"}