{"ast":null,"code":"import { ErrorFactory, areCookiesEnabled, isIndexedDBAvailable, validateIndexedDBOpenable, getModularInstance, deepEqual } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { getApp, _getProvider, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport '@firebase/installations';\nconst name = \"@firebase/performance\";\nconst version = \"0.5.5\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nconst SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\n\nconst TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\n\nconst TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\n\nconst TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\n\nconst OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\nconst FIRST_PAINT_COUNTER_NAME = '_fp';\nconst FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\nconst FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\nconst CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\nconst CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\nconst SERVICE = 'performance';\nconst SERVICE_NAME = 'Performance';\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nconst ERROR_DESCRIPTION_MAP = {\n  [\"trace started\"\n  /* TRACE_STARTED_BEFORE */\n  ]: 'Trace {$traceName} was started before.',\n  [\"trace stopped\"\n  /* TRACE_STOPPED_BEFORE */\n  ]: 'Trace {$traceName} is not running.',\n  [\"nonpositive trace startTime\"\n  /* NONPOSITIVE_TRACE_START_TIME */\n  ]: 'Trace {$traceName} startTime should be positive.',\n  [\"nonpositive trace duration\"\n  /* NONPOSITIVE_TRACE_DURATION */\n  ]: 'Trace {$traceName} duration should be positive.',\n  [\"no window\"\n  /* NO_WINDOW */\n  ]: 'Window is not available.',\n  [\"no app id\"\n  /* NO_APP_ID */\n  ]: 'App id is not available.',\n  [\"no project id\"\n  /* NO_PROJECT_ID */\n  ]: 'Project id is not available.',\n  [\"no api key\"\n  /* NO_API_KEY */\n  ]: 'Api key is not available.',\n  [\"invalid cc log\"\n  /* INVALID_CC_LOG */\n  ]: 'Attempted to queue invalid cc event',\n  [\"FB not default\"\n  /* FB_NOT_DEFAULT */\n  ]: 'Performance can only start when Firebase app instance is the default one.',\n  [\"RC response not ok\"\n  /* RC_NOT_OK */\n  ]: 'RC response is not ok',\n  [\"invalid attribute name\"\n  /* INVALID_ATTRIBUTE_NAME */\n  ]: 'Attribute name {$attributeName} is invalid.',\n  [\"invalid attribute value\"\n  /* INVALID_ATTRIBUTE_VALUE */\n  ]: 'Attribute value {$attributeValue} is invalid.',\n  [\"invalid custom metric name\"\n  /* INVALID_CUSTOM_METRIC_NAME */\n  ]: 'Custom metric name {$customMetricName} is invalid',\n  [\"invalid String merger input\"\n  /* INVALID_STRING_MERGER_PARAMETER */\n  ]: 'Input for String merger is invalid, contact support team to resolve.',\n  [\"already initialized\"\n  /* ALREADY_INITIALIZED */\n  ]: 'initializePerformance() has already been called with ' + 'different options. To avoid this error, call initializePerformance() with the ' + 'same options as when it was originally called, or call getPerformance() to return the' + ' already initialized instance.'\n};\nconst ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nconst consoleLogger = new Logger(SERVICE_NAME);\nconsoleLogger.logLevel = LogLevel.INFO;\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nlet apiInstance;\nlet windowInstance;\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\n\nclass Api {\n  constructor(window) {\n    this.window = window;\n\n    if (!window) {\n      throw ERROR_FACTORY.create(\"no window\"\n      /* NO_WINDOW */\n      );\n    }\n\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will\n      // throw an exception.\n      this.localStorage = window.localStorage;\n    }\n\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n\n  getUrl() {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  }\n\n  mark(name) {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n\n    this.performance.mark(name);\n  }\n\n  measure(measureName, mark1, mark2) {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n\n    this.performance.measure(measureName, mark1, mark2);\n  }\n\n  getEntriesByType(type) {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n\n    return this.performance.getEntriesByType(type);\n  }\n\n  getEntriesByName(name) {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n\n    return this.performance.getEntriesByName(name);\n  }\n\n  getTimeOrigin() {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return this.performance && (this.performance.timeOrigin || this.performance.timing.navigationStart);\n  }\n\n  requiredApisAvailable() {\n    if (!fetch || !Promise || !areCookiesEnabled()) {\n      consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\n      return false;\n    }\n\n    if (!isIndexedDBAvailable()) {\n      consoleLogger.info('IndexedDB is not supported by current browswer');\n      return false;\n    }\n\n    return true;\n  }\n\n  setupObserver(entryType, callback) {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n\n    const observer = new this.PerformanceObserver(list => {\n      for (const entry of list.getEntries()) {\n        // `entry` is a PerformanceEntry instance.\n        callback(entry);\n      }\n    }); // Start observing the entry types you care about.\n\n    observer.observe({\n      entryTypes: [entryType]\n    });\n  }\n\n  static getInstance() {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n\n    return apiInstance;\n  }\n\n}\n\nfunction setupApi(window) {\n  windowInstance = window;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nlet iid;\n\nfunction getIidPromise(installationsService) {\n  const iidPromise = installationsService.getId(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n  iidPromise.then(iidVal => {\n    iid = iidVal;\n  });\n  return iidPromise;\n} // This method should be used after the iid is retrieved by getIidPromise method.\n\n\nfunction getIid() {\n  return iid;\n}\n\nfunction getAuthTokenPromise(installationsService) {\n  const authTokenPromise = installationsService.getToken(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n  authTokenPromise.then(authTokenVal => {});\n  return authTokenPromise;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction mergeStrings(part1, part2) {\n  const sizeDiff = part1.length - part2.length;\n\n  if (sizeDiff < 0 || sizeDiff > 1) {\n    throw ERROR_FACTORY.create(\"invalid String merger input\"\n    /* INVALID_STRING_MERGER_PARAMETER */\n    );\n  }\n\n  const resultArray = [];\n\n  for (let i = 0; i < part1.length; i++) {\n    resultArray.push(part1.charAt(i));\n\n    if (part2.length > i) {\n      resultArray.push(part2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nlet settingsServiceInstance;\n\nclass SettingsService {\n  constructor() {\n    // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n    this.instrumentationEnabled = true; // The variable which controls logging of custom traces.\n\n    this.dataCollectionEnabled = true; // Configuration flags set through remote config.\n\n    this.loggingEnabled = false; // Sampling rate between 0 and 1.\n\n    this.tracesSamplingRate = 1;\n    this.networkRequestsSamplingRate = 1; // Address of logging service.\n\n    this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto'; // Performance event transport endpoint URL which should be compatible with proto3.\n    // New Address for transport service, not configurable via Remote Config.\n\n    this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\n    this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV'); // Source type for performance event logs.\n\n    this.logSource = 462; // Flags which control per session logging of traces and network requests.\n\n    this.logTraceAfterSampling = false;\n    this.logNetworkAfterSampling = false; // TTL of config retrieved from remote config in hours.\n\n    this.configTimeToLive = 12;\n  }\n\n  getFlTransportFullUrl() {\n    return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\n  }\n\n  static getInstance() {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n\n    return settingsServiceInstance;\n  }\n\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VisibilityState;\n\n(function (VisibilityState) {\n  VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n  VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\n})(VisibilityState || (VisibilityState = {}));\n\nconst RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nconst ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nconst MAX_ATTRIBUTE_NAME_LENGTH = 40;\nconst MAX_ATTRIBUTE_VALUE_LENGTH = 100;\n\nfunction getServiceWorkerStatus() {\n  const navigator = Api.getInstance().navigator;\n\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return 2\n      /* CONTROLLED */\n      ;\n    } else {\n      return 3\n      /* UNCONTROLLED */\n      ;\n    }\n  } else {\n    return 1\n    /* UNSUPPORTED */\n    ;\n  }\n}\n\nfunction getVisibilityState() {\n  const document = Api.getInstance().document;\n  const visibilityState = document.visibilityState;\n\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\n\nfunction getEffectiveConnectionType() {\n  const navigator = Api.getInstance().navigator;\n  const navigatorConnection = navigator.connection;\n  const effectiveType = navigatorConnection && navigatorConnection.effectiveType;\n\n  switch (effectiveType) {\n    case 'slow-2g':\n      return 1\n      /* CONNECTION_SLOW_2G */\n      ;\n\n    case '2g':\n      return 2\n      /* CONNECTION_2G */\n      ;\n\n    case '3g':\n      return 3\n      /* CONNECTION_3G */\n      ;\n\n    case '4g':\n      return 4\n      /* CONNECTION_4G */\n      ;\n\n    default:\n      return 0\n      /* UNKNOWN */\n      ;\n  }\n}\n\nfunction isValidCustomAttributeName(name) {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n\n  const matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(prefix => name.startsWith(prefix));\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\n\nfunction isValidCustomAttributeValue(value) {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getAppId(firebaseApp) {\n  var _a;\n\n  const appId = (_a = firebaseApp.options) === null || _a === void 0 ? void 0 : _a.appId;\n\n  if (!appId) {\n    throw ERROR_FACTORY.create(\"no app id\"\n    /* NO_APP_ID */\n    );\n  }\n\n  return appId;\n}\n\nfunction getProjectId(firebaseApp) {\n  var _a;\n\n  const projectId = (_a = firebaseApp.options) === null || _a === void 0 ? void 0 : _a.projectId;\n\n  if (!projectId) {\n    throw ERROR_FACTORY.create(\"no project id\"\n    /* NO_PROJECT_ID */\n    );\n  }\n\n  return projectId;\n}\n\nfunction getApiKey(firebaseApp) {\n  var _a;\n\n  const apiKey = (_a = firebaseApp.options) === null || _a === void 0 ? void 0 : _a.apiKey;\n\n  if (!apiKey) {\n    throw ERROR_FACTORY.create(\"no api key\"\n    /* NO_API_KEY */\n    );\n  }\n\n  return apiKey;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst REMOTE_CONFIG_SDK_VERSION = '0.0.1'; // T","map":{"version":3,"sources":["/Users/aider/WebstormProjects/Marketslick/Marketslick/node_modules/@firebase/performance/dist/esm/index.esm2017.js"],"names":["ErrorFactory","areCookiesEnabled","isIndexedDBAvailable","validateIndexedDBOpenable","getModularInstance","deepEqual","Logger","LogLevel","getApp","_getProvider","_registerComponent","registerVersion","Component","name","version","SDK_VERSION","TRACE_START_MARK_PREFIX","TRACE_STOP_MARK_PREFIX","TRACE_MEASURE_PREFIX","OOB_TRACE_PAGE_LOAD_PREFIX","FIRST_PAINT_COUNTER_NAME","FIRST_CONTENTFUL_PAINT_COUNTER_NAME","FIRST_INPUT_DELAY_COUNTER_NAME","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","SERVICE","SERVICE_NAME","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","consoleLogger","logLevel","INFO","apiInstance","windowInstance","Api","constructor","window","create","performance","PerformanceObserver","windowLocation","location","navigator","document","cookieEnabled","localStorage","perfMetrics","onFirstInputDelay","getUrl","href","split","mark","measure","measureName","mark1","mark2","getEntriesByType","type","getEntriesByName","getTimeOrigin","timeOrigin","timing","navigationStart","requiredApisAvailable","fetch","Promise","info","setupObserver","entryType","callback","observer","list","entry","getEntries","observe","entryTypes","getInstance","undefined","setupApi","iid","getIidPromise","installationsService","iidPromise","getId","then","iidVal","getIid","getAuthTokenPromise","authTokenPromise","getToken","authTokenVal","mergeStrings","part1","part2","sizeDiff","length","resultArray","i","push","charAt","join","settingsServiceInstance","SettingsService","instrumentationEnabled","dataCollectionEnabled","loggingEnabled","tracesSamplingRate","networkRequestsSamplingRate","logEndPointUrl","flTransportEndpointUrl","transportKey","logSource","logTraceAfterSampling","logNetworkAfterSampling","configTimeToLive","getFlTransportFullUrl","concat","VisibilityState","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","RegExp","MAX_ATTRIBUTE_NAME_LENGTH","MAX_ATTRIBUTE_VALUE_LENGTH","getServiceWorkerStatus","serviceWorker","controller","getVisibilityState","visibilityState","VISIBLE","HIDDEN","UNKNOWN","getEffectiveConnectionType","navigatorConnection","connection","effectiveType","isValidCustomAttributeName","matchesReservedPrefix","some","prefix","startsWith","match","isValidCustomAttributeValue","value","getAppId","firebaseApp","_a","appId","options","getProjectId","projectId","getApiKey","apiKey","REMOTE_CONFIG_SDK_VERSION"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,iBAAvB,EAA0CC,oBAA1C,EAAgEC,yBAAhE,EAA2FC,kBAA3F,EAA+GC,SAA/G,QAAgI,gBAAhI;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,kBAA/B,EAAmDC,eAAnD,QAA0E,eAA1E;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAO,yBAAP;AAEA,MAAMC,IAAI,GAAG,uBAAb;AACA,MAAMC,OAAO,GAAG,OAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAGD,OAApB;AACA;;AACA,MAAME,uBAAuB,GAAG,qBAAhC;AACA;;AACA,MAAMC,sBAAsB,GAAG,oBAA/B;AACA;;AACA,MAAMC,oBAAoB,GAAG,uBAA7B;AACA;;AACA,MAAMC,0BAA0B,GAAG,MAAnC;AACA,MAAMC,wBAAwB,GAAG,KAAjC;AACA,MAAMC,mCAAmC,GAAG,MAA5C;AACA,MAAMC,8BAA8B,GAAG,MAAvC;AACA,MAAMC,wBAAwB,GAAG,8BAAjC;AACA,MAAMC,+BAA+B,GAAG,oCAAxC;AACA,MAAMC,OAAO,GAAG,aAAhB;AACA,MAAMC,YAAY,GAAG,aAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,qBAAqB,GAAG;AAC1B,GAAC;AAAgB;AAAjB,KAA8C,wCADpB;AAE1B,GAAC;AAAgB;AAAjB,KAA8C,oCAFpB;AAG1B,GAAC;AAA8B;AAA/B,KAAoE,kDAH1C;AAI1B,GAAC;AAA6B;AAA9B,KAAiE,iDAJvC;AAK1B,GAAC;AAAY;AAAb,KAA+B,0BALL;AAM1B,GAAC;AAAY;AAAb,KAA+B,0BANL;AAO1B,GAAC;AAAgB;AAAjB,KAAuC,8BAPb;AAQ1B,GAAC;AAAa;AAAd,KAAiC,2BARP;AAS1B,GAAC;AAAiB;AAAlB,KAAyC,qCATf;AAU1B,GAAC;AAAiB;AAAlB,KAAyC,2EAVf;AAW1B,GAAC;AAAqB;AAAtB,KAAwC,uBAXd;AAY1B,GAAC;AAAyB;AAA1B,KAAyD,6CAZ/B;AAa1B,GAAC;AAA0B;AAA3B,KAA2D,+CAbjC;AAc1B,GAAC;AAA6B;AAA9B,KAAiE,mDAdvC;AAe1B,GAAC;AAA8B;AAA/B,KAAuE,sEAf7C;AAgB1B,GAAC;AAAsB;AAAvB,KAAmD,0DAC/C,gFAD+C,GAE/C,uFAF+C,GAG/C;AAnBsB,CAA9B;AAqBA,MAAMC,aAAa,GAAG,IAAI5B,YAAJ,CAAiByB,OAAjB,EAA0BC,YAA1B,EAAwCC,qBAAxC,CAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAME,aAAa,GAAG,IAAIvB,MAAJ,CAAWoB,YAAX,CAAtB;AACAG,aAAa,CAACC,QAAd,GAAyBvB,QAAQ,CAACwB,IAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,WAAJ;AACA,IAAIC,cAAJ;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAN,CAAU;AACNC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,SAAKA,MAAL,GAAcA,MAAd;;AACA,QAAI,CAACA,MAAL,EAAa;AACT,YAAMR,aAAa,CAACS,MAAd,CAAqB;AAAY;AAAjC,OAAN;AACH;;AACD,SAAKC,WAAL,GAAmBF,MAAM,CAACE,WAA1B;AACA,SAAKC,mBAAL,GAA2BH,MAAM,CAACG,mBAAlC;AACA,SAAKC,cAAL,GAAsBJ,MAAM,CAACK,QAA7B;AACA,SAAKC,SAAL,GAAiBN,MAAM,CAACM,SAAxB;AACA,SAAKC,QAAL,GAAgBP,MAAM,CAACO,QAAvB;;AACA,QAAI,KAAKD,SAAL,IAAkB,KAAKA,SAAL,CAAeE,aAArC,EAAoD;AAChD;AACA;AACA,WAAKC,YAAL,GAAoBT,MAAM,CAACS,YAA3B;AACH;;AACD,QAAIT,MAAM,CAACU,WAAP,IAAsBV,MAAM,CAACU,WAAP,CAAmBC,iBAA7C,EAAgE;AAC5D,WAAKA,iBAAL,GAAyBX,MAAM,CAACU,WAAP,CAAmBC,iBAA5C;AACH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL;AACA,WAAO,KAAKR,cAAL,CAAoBS,IAApB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAP;AACH;;AACDC,EAAAA,IAAI,CAACtC,IAAD,EAAO;AACP,QAAI,CAAC,KAAKyB,WAAN,IAAqB,CAAC,KAAKA,WAAL,CAAiBa,IAA3C,EAAiD;AAC7C;AACH;;AACD,SAAKb,WAAL,CAAiBa,IAAjB,CAAsBtC,IAAtB;AACH;;AACDuC,EAAAA,OAAO,CAACC,WAAD,EAAcC,KAAd,EAAqBC,KAArB,EAA4B;AAC/B,QAAI,CAAC,KAAKjB,WAAN,IAAqB,CAAC,KAAKA,WAAL,CAAiBc,OAA3C,EAAoD;AAChD;AACH;;AACD,SAAKd,WAAL,CAAiBc,OAAjB,CAAyBC,WAAzB,EAAsCC,KAAtC,EAA6CC,KAA7C;AACH;;AACDC,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnB,QAAI,CAAC,KAAKnB,WAAN,IAAqB,CAAC,KAAKA,WAAL,CAAiBkB,gBAA3C,EAA6D;AACzD,aAAO,EAAP;AACH;;AACD,WAAO,KAAKlB,WAAL,CAAiBkB,gBAAjB,CAAkCC,IAAlC,CAAP;AACH;;AACDC,EAAAA,gBAAgB,CAAC7C,IAAD,EAAO;AACnB,QAAI,CAAC,KAAKyB,WAAN,IAAqB,CAAC,KAAKA,WAAL,CAAiBoB,gBAA3C,EAA6D;AACzD,aAAO,EAAP;AACH;;AACD,WAAO,KAAKpB,WAAL,CAAiBoB,gBAAjB,CAAkC7C,IAAlC,CAAP;AACH;;AACD8C,EAAAA,aAAa,GAAG;AACZ;AACA,WAAQ,KAAKrB,WAAL,KACH,KAAKA,WAAL,CAAiBsB,UAAjB,IAA+B,KAAKtB,WAAL,CAAiBuB,MAAjB,CAAwBC,eADpD,CAAR;AAEH;;AACDC,EAAAA,qBAAqB,GAAG;AACpB,QAAI,CAACC,KAAD,IAAU,CAACC,OAAX,IAAsB,CAAChE,iBAAiB,EAA5C,EAAgD;AAC5C4B,MAAAA,aAAa,CAACqC,IAAd,CAAmB,wGAAnB;AACA,aAAO,KAAP;AACH;;AACD,QAAI,CAAChE,oBAAoB,EAAzB,EAA6B;AACzB2B,MAAAA,aAAa,CAACqC,IAAd,CAAmB,gDAAnB;AACA,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AACDC,EAAAA,aAAa,CAACC,SAAD,EAAYC,QAAZ,EAAsB;AAC/B,QAAI,CAAC,KAAK9B,mBAAV,EAA+B;AAC3B;AACH;;AACD,UAAM+B,QAAQ,GAAG,IAAI,KAAK/B,mBAAT,CAA6BgC,IAAI,IAAI;AAClD,WAAK,MAAMC,KAAX,IAAoBD,IAAI,CAACE,UAAL,EAApB,EAAuC;AACnC;AACAJ,QAAAA,QAAQ,CAACG,KAAD,CAAR;AACH;AACJ,KALgB,CAAjB,CAJ+B,CAU/B;;AACAF,IAAAA,QAAQ,CAACI,OAAT,CAAiB;AAAEC,MAAAA,UAAU,EAAE,CAACP,SAAD;AAAd,KAAjB;AACH;;AACiB,SAAXQ,WAAW,GAAG;AACjB,QAAI5C,WAAW,KAAK6C,SAApB,EAA+B;AAC3B7C,MAAAA,WAAW,GAAG,IAAIE,GAAJ,CAAQD,cAAR,CAAd;AACH;;AACD,WAAOD,WAAP;AACH;;AAlFK;;AAoFV,SAAS8C,QAAT,CAAkB1C,MAAlB,EAA0B;AACtBH,EAAAA,cAAc,GAAGG,MAAjB;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI2C,GAAJ;;AACA,SAASC,aAAT,CAAuBC,oBAAvB,EAA6C;AACzC,QAAMC,UAAU,GAAGD,oBAAoB,CAACE,KAArB,EAAnB,CADyC,CAEzC;;AACAD,EAAAA,UAAU,CAACE,IAAX,CAAiBC,MAAD,IAAY;AACxBN,IAAAA,GAAG,GAAGM,MAAN;AACH,GAFD;AAGA,SAAOH,UAAP;AACH,C,CACD;;;AACA,SAASI,MAAT,GAAkB;AACd,SAAOP,GAAP;AACH;;AACD,SAASQ,mBAAT,CAA6BN,oBAA7B,EAAmD;AAC/C,QAAMO,gBAAgB,GAAGP,oBAAoB,CAACQ,QAArB,EAAzB,CAD+C,CAE/C;;AACAD,EAAAA,gBAAgB,CAACJ,IAAjB,CAAuBM,YAAD,IAAkB,CACvC,CADD;AAEA,SAAOF,gBAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,YAAT,CAAsBC,KAAtB,EAA6BC,KAA7B,EAAoC;AAChC,QAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,GAAeF,KAAK,CAACE,MAAtC;;AACA,MAAID,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,GAAG,CAA/B,EAAkC;AAC9B,UAAMlE,aAAa,CAACS,MAAd,CAAqB;AAA8B;AAAnD,KAAN;AACH;;AACD,QAAM2D,WAAW,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACG,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACnCD,IAAAA,WAAW,CAACE,IAAZ,CAAiBN,KAAK,CAACO,MAAN,CAAaF,CAAb,CAAjB;;AACA,QAAIJ,KAAK,CAACE,MAAN,GAAeE,CAAnB,EAAsB;AAClBD,MAAAA,WAAW,CAACE,IAAZ,CAAiBL,KAAK,CAACM,MAAN,CAAaF,CAAb,CAAjB;AACH;AACJ;;AACD,SAAOD,WAAW,CAACI,IAAZ,CAAiB,EAAjB,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,uBAAJ;;AACA,MAAMC,eAAN,CAAsB;AAClBnE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKoE,sBAAL,GAA8B,IAA9B,CAFU,CAGV;;AACA,SAAKC,qBAAL,GAA6B,IAA7B,CAJU,CAKV;;AACA,SAAKC,cAAL,GAAsB,KAAtB,CANU,CAOV;;AACA,SAAKC,kBAAL,GAA0B,CAA1B;AACA,SAAKC,2BAAL,GAAmC,CAAnC,CATU,CAUV;;AACA,SAAKC,cAAL,GAAsB,mEAAtB,CAXU,CAYV;AACA;;AACA,SAAKC,sBAAL,GAA8BlB,YAAY,CAAC,kCAAD,EAAqC,iCAArC,CAA1C;AACA,SAAKmB,YAAL,GAAoBnB,YAAY,CAAC,sBAAD,EAAyB,qBAAzB,CAAhC,CAfU,CAgBV;;AACA,SAAKoB,SAAL,GAAiB,GAAjB,CAjBU,CAkBV;;AACA,SAAKC,qBAAL,GAA6B,KAA7B;AACA,SAAKC,uBAAL,GAA+B,KAA/B,CApBU,CAqBV;;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AACH;;AACDC,EAAAA,qBAAqB,GAAG;AACpB,WAAO,KAAKN,sBAAL,CAA4BO,MAA5B,CAAmC,OAAnC,EAA4C,KAAKN,YAAjD,CAAP;AACH;;AACiB,SAAXlC,WAAW,GAAG;AACjB,QAAIyB,uBAAuB,KAAKxB,SAAhC,EAA2C;AACvCwB,MAAAA,uBAAuB,GAAG,IAAIC,eAAJ,EAA1B;AACH;;AACD,WAAOD,uBAAP;AACH;;AAjCiB;AAoCtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIgB,eAAJ;;AACA,CAAC,UAAUA,eAAV,EAA2B;AACxBA,EAAAA,eAAe,CAACA,eAAe,CAAC,SAAD,CAAf,GAA6B,CAA9B,CAAf,GAAkD,SAAlD;AACAA,EAAAA,eAAe,CAACA,eAAe,CAAC,SAAD,CAAf,GAA6B,CAA9B,CAAf,GAAkD,SAAlD;AACAA,EAAAA,eAAe,CAACA,eAAe,CAAC,QAAD,CAAf,GAA4B,CAA7B,CAAf,GAAiD,QAAjD;AACH,CAJD,EAIGA,eAAe,KAAKA,eAAe,GAAG,EAAvB,CAJlB;;AAKA,MAAMC,2BAA2B,GAAG,CAAC,WAAD,EAAc,SAAd,EAAyB,KAAzB,CAApC;AACA,MAAMC,sBAAsB,GAAG,IAAIC,MAAJ,CAAW,gBAAX,CAA/B;AACA,MAAMC,yBAAyB,GAAG,EAAlC;AACA,MAAMC,0BAA0B,GAAG,GAAnC;;AACA,SAASC,sBAAT,GAAkC;AAC9B,QAAMjF,SAAS,GAAGR,GAAG,CAAC0C,WAAJ,GAAkBlC,SAApC;;AACA,MAAI,mBAAmBA,SAAvB,EAAkC;AAC9B,QAAIA,SAAS,CAACkF,aAAV,CAAwBC,UAA5B,EAAwC;AACpC,aAAO;AAAE;AAAT;AACH,KAFD,MAGK;AACD,aAAO;AAAE;AAAT;AACH;AACJ,GAPD,MAQK;AACD,WAAO;AAAE;AAAT;AACH;AACJ;;AACD,SAASC,kBAAT,GAA8B;AAC1B,QAAMnF,QAAQ,GAAGT,GAAG,CAAC0C,WAAJ,GAAkBjC,QAAnC;AACA,QAAMoF,eAAe,GAAGpF,QAAQ,CAACoF,eAAjC;;AACA,UAAQA,eAAR;AACI,SAAK,SAAL;AACI,aAAOV,eAAe,CAACW,OAAvB;;AACJ,SAAK,QAAL;AACI,aAAOX,eAAe,CAACY,MAAvB;;AACJ;AACI,aAAOZ,eAAe,CAACa,OAAvB;AANR;AAQH;;AACD,SAASC,0BAAT,GAAsC;AAClC,QAAMzF,SAAS,GAAGR,GAAG,CAAC0C,WAAJ,GAAkBlC,SAApC;AACA,QAAM0F,mBAAmB,GAAG1F,SAAS,CAAC2F,UAAtC;AACA,QAAMC,aAAa,GAAGF,mBAAmB,IAAIA,mBAAmB,CAACE,aAAjE;;AACA,UAAQA,aAAR;AACI,SAAK,SAAL;AACI,aAAO;AAAE;AAAT;;AACJ,SAAK,IAAL;AACI,aAAO;AAAE;AAAT;;AACJ,SAAK,IAAL;AACI,aAAO;AAAE;AAAT;;AACJ,SAAK,IAAL;AACI,aAAO;AAAE;AAAT;;AACJ;AACI,aAAO;AAAE;AAAT;AAVR;AAYH;;AACD,SAASC,0BAAT,CAAoC1H,IAApC,EAA0C;AACtC,MAAIA,IAAI,CAACkF,MAAL,KAAgB,CAAhB,IAAqBlF,IAAI,CAACkF,MAAL,GAAc0B,yBAAvC,EAAkE;AAC9D,WAAO,KAAP;AACH;;AACD,QAAMe,qBAAqB,GAAGlB,2BAA2B,CAACmB,IAA5B,CAAiCC,MAAM,IAAI7H,IAAI,CAAC8H,UAAL,CAAgBD,MAAhB,CAA3C,CAA9B;AACA,SAAO,CAACF,qBAAD,IAA0B,CAAC,CAAC3H,IAAI,CAAC+H,KAAL,CAAWrB,sBAAX,CAAnC;AACH;;AACD,SAASsB,2BAAT,CAAqCC,KAArC,EAA4C;AACxC,SAAOA,KAAK,CAAC/C,MAAN,KAAiB,CAAjB,IAAsB+C,KAAK,CAAC/C,MAAN,IAAgB2B,0BAA7C;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASqB,QAAT,CAAkBC,WAAlB,EAA+B;AAC3B,MAAIC,EAAJ;;AACA,QAAMC,KAAK,GAAG,CAACD,EAAE,GAAGD,WAAW,CAACG,OAAlB,MAA+B,IAA/B,IAAuCF,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACC,KAAjF;;AACA,MAAI,CAACA,KAAL,EAAY;AACR,UAAMtH,aAAa,CAACS,MAAd,CAAqB;AAAY;AAAjC,KAAN;AACH;;AACD,SAAO6G,KAAP;AACH;;AACD,SAASE,YAAT,CAAsBJ,WAAtB,EAAmC;AAC/B,MAAIC,EAAJ;;AACA,QAAMI,SAAS,GAAG,CAACJ,EAAE,GAAGD,WAAW,CAACG,OAAlB,MAA+B,IAA/B,IAAuCF,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACI,SAArF;;AACA,MAAI,CAACA,SAAL,EAAgB;AACZ,UAAMzH,aAAa,CAACS,MAAd,CAAqB;AAAgB;AAArC,KAAN;AACH;;AACD,SAAOgH,SAAP;AACH;;AACD,SAASC,SAAT,CAAmBN,WAAnB,EAAgC;AAC5B,MAAIC,EAAJ;;AACA,QAAMM,MAAM,GAAG,CAACN,EAAE,GAAGD,WAAW,CAACG,OAAlB,MAA+B,IAA/B,IAAuCF,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACM,MAAlF;;AACA,MAAI,CAACA,MAAL,EAAa;AACT,UAAM3H,aAAa,CAACS,MAAd,CAAqB;AAAa;AAAlC,KAAN;AACH;;AACD,SAAOkH,MAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,yBAAyB,GAAG,OAAlC,C,CACA","sourcesContent":["import { ErrorFactory, areCookiesEnabled, isIndexedDBAvailable, validateIndexedDBOpenable, getModularInstance, deepEqual } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { getApp, _getProvider, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport '@firebase/installations';\n\nconst name = \"@firebase/performance\";\nconst version = \"0.5.5\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SDK_VERSION = version;\r\n/** The prefix for start User Timing marks used for creating Traces. */\r\nconst TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\r\n/** The prefix for stop User Timing marks used for creating Traces. */\r\nconst TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\r\n/** The prefix for User Timing measure used for creating Traces. */\r\nconst TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\r\n/** The prefix for out of the box page load Trace name. */\r\nconst OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\r\nconst FIRST_PAINT_COUNTER_NAME = '_fp';\r\nconst FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\r\nconst FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\r\nconst CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\r\nconst CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\r\nconst SERVICE = 'performance';\r\nconst SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERROR_DESCRIPTION_MAP = {\r\n    [\"trace started\" /* TRACE_STARTED_BEFORE */]: 'Trace {$traceName} was started before.',\r\n    [\"trace stopped\" /* TRACE_STOPPED_BEFORE */]: 'Trace {$traceName} is not running.',\r\n    [\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */]: 'Trace {$traceName} startTime should be positive.',\r\n    [\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */]: 'Trace {$traceName} duration should be positive.',\r\n    [\"no window\" /* NO_WINDOW */]: 'Window is not available.',\r\n    [\"no app id\" /* NO_APP_ID */]: 'App id is not available.',\r\n    [\"no project id\" /* NO_PROJECT_ID */]: 'Project id is not available.',\r\n    [\"no api key\" /* NO_API_KEY */]: 'Api key is not available.',\r\n    [\"invalid cc log\" /* INVALID_CC_LOG */]: 'Attempted to queue invalid cc event',\r\n    [\"FB not default\" /* FB_NOT_DEFAULT */]: 'Performance can only start when Firebase app instance is the default one.',\r\n    [\"RC response not ok\" /* RC_NOT_OK */]: 'RC response is not ok',\r\n    [\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */]: 'Attribute name {$attributeName} is invalid.',\r\n    [\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */]: 'Attribute value {$attributeValue} is invalid.',\r\n    [\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */]: 'Custom metric name {$customMetricName} is invalid',\r\n    [\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */]: 'Input for String merger is invalid, contact support team to resolve.',\r\n    [\"already initialized\" /* ALREADY_INITIALIZED */]: 'initializePerformance() has already been called with ' +\r\n        'different options. To avoid this error, call initializePerformance() with the ' +\r\n        'same options as when it was originally called, or call getPerformance() to return the' +\r\n        ' already initialized instance.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst consoleLogger = new Logger(SERVICE_NAME);\r\nconsoleLogger.logLevel = LogLevel.INFO;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet apiInstance;\r\nlet windowInstance;\r\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\r\nclass Api {\r\n    constructor(window) {\r\n        this.window = window;\r\n        if (!window) {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        this.performance = window.performance;\r\n        this.PerformanceObserver = window.PerformanceObserver;\r\n        this.windowLocation = window.location;\r\n        this.navigator = window.navigator;\r\n        this.document = window.document;\r\n        if (this.navigator && this.navigator.cookieEnabled) {\r\n            // If user blocks cookies on the browser, accessing localStorage will\r\n            // throw an exception.\r\n            this.localStorage = window.localStorage;\r\n        }\r\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\r\n            this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\r\n        }\r\n    }\r\n    getUrl() {\r\n        // Do not capture the string query part of url.\r\n        return this.windowLocation.href.split('?')[0];\r\n    }\r\n    mark(name) {\r\n        if (!this.performance || !this.performance.mark) {\r\n            return;\r\n        }\r\n        this.performance.mark(name);\r\n    }\r\n    measure(measureName, mark1, mark2) {\r\n        if (!this.performance || !this.performance.measure) {\r\n            return;\r\n        }\r\n        this.performance.measure(measureName, mark1, mark2);\r\n    }\r\n    getEntriesByType(type) {\r\n        if (!this.performance || !this.performance.getEntriesByType) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByType(type);\r\n    }\r\n    getEntriesByName(name) {\r\n        if (!this.performance || !this.performance.getEntriesByName) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByName(name);\r\n    }\r\n    getTimeOrigin() {\r\n        // Polyfill the time origin with performance.timing.navigationStart.\r\n        return (this.performance &&\r\n            (this.performance.timeOrigin || this.performance.timing.navigationStart));\r\n    }\r\n    requiredApisAvailable() {\r\n        if (!fetch || !Promise || !areCookiesEnabled()) {\r\n            consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\r\n            return false;\r\n        }\r\n        if (!isIndexedDBAvailable()) {\r\n            consoleLogger.info('IndexedDB is not supported by current browswer');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    setupObserver(entryType, callback) {\r\n        if (!this.PerformanceObserver) {\r\n            return;\r\n        }\r\n        const observer = new this.PerformanceObserver(list => {\r\n            for (const entry of list.getEntries()) {\r\n                // `entry` is a PerformanceEntry instance.\r\n                callback(entry);\r\n            }\r\n        });\r\n        // Start observing the entry types you care about.\r\n        observer.observe({ entryTypes: [entryType] });\r\n    }\r\n    static getInstance() {\r\n        if (apiInstance === undefined) {\r\n            apiInstance = new Api(windowInstance);\r\n        }\r\n        return apiInstance;\r\n    }\r\n}\r\nfunction setupApi(window) {\r\n    windowInstance = window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet iid;\r\nfunction getIidPromise(installationsService) {\r\n    const iidPromise = installationsService.getId();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    iidPromise.then((iidVal) => {\r\n        iid = iidVal;\r\n    });\r\n    return iidPromise;\r\n}\r\n// This method should be used after the iid is retrieved by getIidPromise method.\r\nfunction getIid() {\r\n    return iid;\r\n}\r\nfunction getAuthTokenPromise(installationsService) {\r\n    const authTokenPromise = installationsService.getToken();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    authTokenPromise.then((authTokenVal) => {\r\n    });\r\n    return authTokenPromise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction mergeStrings(part1, part2) {\r\n    const sizeDiff = part1.length - part2.length;\r\n    if (sizeDiff < 0 || sizeDiff > 1) {\r\n        throw ERROR_FACTORY.create(\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */);\r\n    }\r\n    const resultArray = [];\r\n    for (let i = 0; i < part1.length; i++) {\r\n        resultArray.push(part1.charAt(i));\r\n        if (part2.length > i) {\r\n            resultArray.push(part2.charAt(i));\r\n        }\r\n    }\r\n    return resultArray.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet settingsServiceInstance;\r\nclass SettingsService {\r\n    constructor() {\r\n        // The variable which controls logging of automatic traces and HTTP/S network monitoring.\r\n        this.instrumentationEnabled = true;\r\n        // The variable which controls logging of custom traces.\r\n        this.dataCollectionEnabled = true;\r\n        // Configuration flags set through remote config.\r\n        this.loggingEnabled = false;\r\n        // Sampling rate between 0 and 1.\r\n        this.tracesSamplingRate = 1;\r\n        this.networkRequestsSamplingRate = 1;\r\n        // Address of logging service.\r\n        this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\r\n        // Performance event transport endpoint URL which should be compatible with proto3.\r\n        // New Address for transport service, not configurable via Remote Config.\r\n        this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\r\n        this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\r\n        // Source type for performance event logs.\r\n        this.logSource = 462;\r\n        // Flags which control per session logging of traces and network requests.\r\n        this.logTraceAfterSampling = false;\r\n        this.logNetworkAfterSampling = false;\r\n        // TTL of config retrieved from remote config in hours.\r\n        this.configTimeToLive = 12;\r\n    }\r\n    getFlTransportFullUrl() {\r\n        return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\r\n    }\r\n    static getInstance() {\r\n        if (settingsServiceInstance === undefined) {\r\n            settingsServiceInstance = new SettingsService();\r\n        }\r\n        return settingsServiceInstance;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityState;\r\n(function (VisibilityState) {\r\n    VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\r\n    VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\r\n})(VisibilityState || (VisibilityState = {}));\r\nconst RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\r\nconst ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\r\nconst MAX_ATTRIBUTE_NAME_LENGTH = 40;\r\nconst MAX_ATTRIBUTE_VALUE_LENGTH = 100;\r\nfunction getServiceWorkerStatus() {\r\n    const navigator = Api.getInstance().navigator;\r\n    if ('serviceWorker' in navigator) {\r\n        if (navigator.serviceWorker.controller) {\r\n            return 2 /* CONTROLLED */;\r\n        }\r\n        else {\r\n            return 3 /* UNCONTROLLED */;\r\n        }\r\n    }\r\n    else {\r\n        return 1 /* UNSUPPORTED */;\r\n    }\r\n}\r\nfunction getVisibilityState() {\r\n    const document = Api.getInstance().document;\r\n    const visibilityState = document.visibilityState;\r\n    switch (visibilityState) {\r\n        case 'visible':\r\n            return VisibilityState.VISIBLE;\r\n        case 'hidden':\r\n            return VisibilityState.HIDDEN;\r\n        default:\r\n            return VisibilityState.UNKNOWN;\r\n    }\r\n}\r\nfunction getEffectiveConnectionType() {\r\n    const navigator = Api.getInstance().navigator;\r\n    const navigatorConnection = navigator.connection;\r\n    const effectiveType = navigatorConnection && navigatorConnection.effectiveType;\r\n    switch (effectiveType) {\r\n        case 'slow-2g':\r\n            return 1 /* CONNECTION_SLOW_2G */;\r\n        case '2g':\r\n            return 2 /* CONNECTION_2G */;\r\n        case '3g':\r\n            return 3 /* CONNECTION_3G */;\r\n        case '4g':\r\n            return 4 /* CONNECTION_4G */;\r\n        default:\r\n            return 0 /* UNKNOWN */;\r\n    }\r\n}\r\nfunction isValidCustomAttributeName(name) {\r\n    if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    const matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(prefix => name.startsWith(prefix));\r\n    return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\r\n}\r\nfunction isValidCustomAttributeValue(value) {\r\n    return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getAppId(firebaseApp) {\r\n    var _a;\r\n    const appId = (_a = firebaseApp.options) === null || _a === void 0 ? void 0 : _a.appId;\r\n    if (!appId) {\r\n        throw ERROR_FACTORY.create(\"no app id\" /* NO_APP_ID */);\r\n    }\r\n    return appId;\r\n}\r\nfunction getProjectId(firebaseApp) {\r\n    var _a;\r\n    const projectId = (_a = firebaseApp.options) === null || _a === void 0 ? void 0 : _a.projectId;\r\n    if (!projectId) {\r\n        throw ERROR_FACTORY.create(\"no project id\" /* NO_PROJECT_ID */);\r\n    }\r\n    return projectId;\r\n}\r\nfunction getApiKey(firebaseApp) {\r\n    var _a;\r\n    const apiKey = (_a = firebaseApp.options) === null || _a === void 0 ? void 0 : _a.apiKey;\r\n    if (!apiKey) {\r\n        throw ERROR_FACTORY.create(\"no api key\" /* NO_API_KEY */);\r\n    }\r\n    return apiKey;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst REMOTE_CONFIG_SDK_VERSION = '0.0.1';\r\n// T"]},"metadata":{},"sourceType":"module"}