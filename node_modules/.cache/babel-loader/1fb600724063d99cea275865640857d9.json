{"ast":null,"code":"// Imports\nconst axios = require(\"axios\"); // API key\n\n\nconst API_KEY = process.env.REACT_APP_RYTR_KEY; // Step 1 - Identify language ID (use language list API endpoint)\n\nconst languageIdEnglish = \"607adac76f8fe5000c1e636d\"; // Step 2 - Identify tone ID (use tone list API endpoint)\n\nconst toneIdConvincing = \"60572a639bdd4272b8fe358b\"; // Step 3 - Identify use case ID (use use-case list API endpoint)\n\nconst useCaseMagicCommandId = \"60ed7113732a5b000cf99e8e\";\nconst useCaseJobDescriptionId = \"60586b31cdebbb000c21058d\"; // use-case detail\n\nasync function caseDetailById(useCaseId) {\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"get\",\n      url: `https://api.rytr.me/v1/use-cases/${useCaseId}`,\n      headers: {\n        Authentication: `Bearer ${API_KEY}`,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return data ? data.data : null;\n  } catch (error) {\n    console.log(error);\n  }\n\n  return null;\n} // ryte\n\n\nasync function ryte(_ref) {\n  let {\n    useCaseId,\n    inputContexts\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"post\",\n      url: \"https://api.rytr.me/v1/ryte\",\n      headers: {\n        Authentication: `Bearer ${API_KEY}`,\n        \"Content-Type\": \"application/json\"\n      },\n      data: {\n        languageId: languageIdEnglish,\n        toneId: toneIdConvincing,\n        useCaseId,\n        inputContexts,\n        variations: 1,\n        userId: \"USER1\",\n        format: \"html\"\n      }\n    });\n    return data ? data.data : null;\n  } catch (error) {\n    console.log(error);\n  }\n\n  return null;\n}\n\nexport async function testRytr() {\n  // Example 1\n  // Use-case - Magic command\n  const useCaseMagicCommand = await caseDetailById(useCaseMagicCommandId);\n  let inputContexts = {\n    [useCaseMagicCommand.contextInputs[0].keyLabel]: \"Write an email for taking a sick leave\"\n  };\n  let output = await ryte({\n    useCaseId: useCaseMagicCommand._id,\n    inputContexts\n  });\n  console.log(\"Output Magic Command\", output); // Example 2\n  // Use-case - Job description\n\n  const useCaseJobDescription = await caseDetailById(useCaseJobDescriptionId);\n  inputContexts = {\n    [useCaseJobDescription.contextInputs[0].keyLabel]: \"Product Manager\"\n  };\n  output = await ryte({\n    useCaseId: useCaseJobDescription._id,\n    inputContexts\n  });\n  console.log(\"Output Job Description\", output);\n}\n;\nexport async function generateContent(tags, context) {\n  const languageIdEnglish = \"607adac76f8fe5000c1e636d\"; // Step 2 - Identify tone ID (use tone list API endpoint)\n\n  const toneIdConvincing = \"60572a639bdd4272b8fe358b\"; // Step 3 - Identify use case ID (use use-case list API endpoint)\n\n  const useCaseMagicCommandId = \"60ed7113732a5b000cf99e8e\";\n  const useCaseJobDescriptionId = \"60586b31cdebbb000c21058d\";\n\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"post\",\n      url: \"https://api.rytr.me/v1/ryte\",\n      headers: {\n        Authentication: `Bearer ${API_KEY}`,\n        \"Content-Type\": \"application/json\"\n      },\n      data: {\n        languageId: languageIdEnglish,\n        toneId: toneIdConvincing,\n        useCaseId,\n        inputContexts,\n        variations: 1,\n        userId: \"USER1\",\n        format: \"html\"\n      }\n    });\n    return data ? data.data : null;\n  } catch (error) {\n    console.log(error);\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/aider/WebstormProjects/Marketslick/Marketslick/src/stores/ContentService.js"],"names":["axios","require","API_KEY","process","env","REACT_APP_RYTR_KEY","languageIdEnglish","toneIdConvincing","useCaseMagicCommandId","useCaseJobDescriptionId","caseDetailById","useCaseId","data","method","url","headers","Authentication","error","console","log","ryte","inputContexts","languageId","toneId","variations","userId","format","testRytr","useCaseMagicCommand","contextInputs","keyLabel","output","_id","useCaseJobDescription","generateContent","tags","context"],"mappings":"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","sourcesContent":["// Imports\nconst axios = require(\"axios\");\n\n// API key\nconst API_KEY = process.env.REACT_APP_RYTR_KEY;\n\n// Step 1 - Identify language ID (use language list API endpoint)\nconst languageIdEnglish = \"607adac76f8fe5000c1e636d\";\n\n// Step 2 - Identify tone ID (use tone list API endpoint)\nconst toneIdConvincing = \"60572a639bdd4272b8fe358b\";\n\n// Step 3 - Identify use case ID (use use-case list API endpoint)\nconst useCaseMagicCommandId = \"60ed7113732a5b000cf99e8e\";\nconst useCaseJobDescriptionId = \"60586b31cdebbb000c21058d\";\n\n// use-case detail\nasync function caseDetailById(useCaseId) {\n    try {\n        const { data } = await axios({\n            method: \"get\",\n            url: `https://api.rytr.me/v1/use-cases/${useCaseId}`,\n            headers: {\n                Authentication: `Bearer ${API_KEY}`,\n                \"Content-Type\": \"application/json\",\n            },\n        });\n\n        return data ? data.data : null;\n    } catch (error) {\n        console.log(error);\n    }\n\n    return null;\n}\n\n// ryte\nasync function ryte({ useCaseId, inputContexts }) {\n    try {\n        const { data } = await axios({\n            method: \"post\",\n            url: \"https://api.rytr.me/v1/ryte\",\n            headers: {\n                Authentication: `Bearer ${API_KEY}`,\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                languageId: languageIdEnglish,\n                toneId: toneIdConvincing,\n                useCaseId,\n                inputContexts,\n                variations: 1,\n                userId: \"USER1\",\n                format: \"html\",\n            },\n        });\n\n        return data ? data.data : null;\n    } catch (error) {\n        console.log(error);\n    }\n\n    return null;\n}\n\nexport async function testRytr(){\n    // Example 1\n    // Use-case - Magic command\n    const useCaseMagicCommand = await caseDetailById(useCaseMagicCommandId);\n\n    let inputContexts = {\n        [useCaseMagicCommand.contextInputs[0].keyLabel]:\n            \"Write an email for taking a sick leave\",\n    };\n\n    let output = await ryte({\n        useCaseId: useCaseMagicCommand._id,\n        inputContexts,\n    });\n\n    console.log(\"Output Magic Command\", output);\n\n    // Example 2\n    // Use-case - Job description\n    const useCaseJobDescription = await caseDetailById(\n        useCaseJobDescriptionId\n    );\n\n    inputContexts = {\n        [useCaseJobDescription.contextInputs[0].keyLabel]: \"Product Manager\",\n    };\n\n    output = await ryte({\n        useCaseId: useCaseJobDescription._id,\n        inputContexts,\n    });\n\n    console.log(\"Output Job Description\", output);\n};\nexport async function generateContent(tags,context){\n    const languageIdEnglish = \"607adac76f8fe5000c1e636d\";\n\n// Step 2 - Identify tone ID (use tone list API endpoint)\n    const toneIdConvincing = \"60572a639bdd4272b8fe358b\";\n\n// Step 3 - Identify use case ID (use use-case list API endpoint)\n    const useCaseMagicCommandId = \"60ed7113732a5b000cf99e8e\";\n    const useCaseJobDescriptionId = \"60586b31cdebbb000c21058d\";\n    try {\n        const { data } = await axios({\n            method: \"post\",\n            url: \"https://api.rytr.me/v1/ryte\",\n            headers: {\n                Authentication: `Bearer ${API_KEY}`,\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                languageId: languageIdEnglish,\n                toneId: toneIdConvincing,\n                useCaseId,\n                inputContexts,\n                variations: 1,\n                userId: \"USER1\",\n                format: \"html\",\n            },\n        });\n\n        return data ? data.data : null;\n    } catch (error) {\n        console.log(error);\n    }\n\n    return null;\n}"]},"metadata":{},"sourceType":"module"}